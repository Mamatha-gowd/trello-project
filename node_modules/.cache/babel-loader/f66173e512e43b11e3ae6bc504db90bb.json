{"ast":null,"code":"var _jsxFileName = \"/home/mamatha/react-redux/src/components/Modal.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Addchecklist from \"./addcard\";\nimport AddCheckitem from \"./addcheckitem\";\nimport AddCheckbox from \"./addcheckbox\";\nimport Additem from \"./additem\";\nimport { getChecklists, addChecklist, deleteChecklist } from \"../Actions/Modalaction\";\n\nclass ChecklistModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAddChecklist = async (e, input) => {\n      e.preventDefault();\n      let url = `https://api.trello.com/1/checklists?idCard=${this.props.modal.id}&name=${input}&key=${key}&token=${token}`;\n      let data = await fetch(url, {\n        method: \"POST\"\n      });\n      data = await data.json();\n      this.setState({\n        checklist: [...this.state.checklist, {\n          name: data.name,\n          checklistid: data.id,\n          checkitems: data.checkItems,\n          key: data.id\n        }],\n        addChecklist: false\n      });\n    };\n\n    this.removeUpdateCheckItem = e => {\n      e.preventDefault();\n      this.setState({\n        updateCheckItem: false\n      });\n    };\n\n    this.checklistItemUpdate = (e, checkitemname) => {\n      console.log(checkitemname);\n\n      if (e.target.className === \"update\") {\n        return;\n      }\n\n      this.setState({\n        updateCheckItem: true,\n        checkitemname: checkitemname\n      });\n    };\n\n    this.removeChecklistitem = e => {\n      e.preventDefault();\n      this.setState({\n        addCheckitem: false\n      });\n    };\n\n    this.showAddChecklist = () => {\n      this.setState({\n        addChecklist: true\n      });\n    };\n\n    this.cancelAddChecklist = e => {\n      console.log(e);\n      e.preventDefault();\n      this.setState({\n        addChecklist: false\n      });\n    };\n\n    this.showAddCheckitem = (name, checklistid) => {\n      this.setState({\n        addCheckitem: true,\n        checklistname: name,\n        checklistid: checklistid\n      });\n    };\n\n    this.handleAddCheckitem = (e, input, checklistid) => {\n      e.preventDefault();\n      console.log(input, e, checklistid);\n      let url = `https://api.trello.com/1/checklists/${checklistid}/checkItems?name=${input}&key=${key}&token=${token}`;\n      fetch(url, {\n        method: \"POST\"\n      }).then(res => res.json()).then(result => {\n        console.log(result);\n        this.state.checklist.forEach((obj, index, arr) => {\n          let c;\n\n          if (obj.checklistid === checklistid) {\n            c = obj.checkitems;\n            c.push(result);\n            console.log(c);\n            let newchecklist = this.state.checklist;\n            newchecklist[index] = {\n              name: result.name,\n              checklistid: result.idChecklist,\n              checkitems: c,\n              key: result.idChecklist\n            };\n            console.log(newchecklist);\n            this.setState({\n              checklist: newchecklist,\n              addCheckitem: true\n            });\n          }\n        });\n      });\n    };\n\n    this.handleDeleteCheckItem = (e, checklistid, checkitemid) => {\n      console.log(e);\n      let url = `https://api.trello.com/1/checklists/${checklistid}/checkItems/${checkitemid}?key=${key}&token=${token}`;\n      fetch(url, {\n        method: \"DELETE\"\n      });\n      this.state.checklist.forEach((obj, index, arr) => {\n        let c;\n\n        if (obj.checklistid === checklistid) {\n          c = obj.checkitems.filter(data => data.id !== checkitemid);\n          console.log(c);\n          let newchecklist = this.state.checklist;\n          newchecklist[index] = {\n            checkitems: c,\n            checklistid: obj.checklistid,\n            key: obj.checklistid,\n            name: obj.name\n          };\n          console.log(newchecklist);\n          this.setState({\n            checklist: newchecklist\n          });\n        }\n      });\n    };\n\n    this.updateCheckitemstate = (checklistid, checkitemid, state) => {\n      let url = `https://api.trello.com/1/cards/${this.props.modal.id}/checkItem/${checkitemid}?state=${state}&key=${key}&token=${token}`;\n      fetch(url, {\n        method: \"PUT\"\n      });\n      this.state.checklist.forEach((obj, index, arr) => {\n        let c;\n\n        if (obj.checklistid === checklistid) {\n          c = obj.checkitems;\n          c.map(data => {\n            if (data.id === checkitemid) {\n              data.state = state;\n            }\n\n            return data;\n          });\n          console.log(c);\n          let newchecklist = this.state.checklist;\n          newchecklist[index] = {\n            checkitems: c,\n            name: obj.name,\n            checklistid: checklistid,\n            key: checklistid\n          };\n          console.log(newchecklist);\n          this.setState({\n            checklist: newchecklist\n          });\n        }\n      });\n    };\n\n    this.handleUpdateCheckitem = (e, input, checklistid, checkitemid) => {\n      e.preventDefault();\n      let url = `https://api.trello.com/1/cards/${this.props.modal.id}/checkItem/${checkitemid}?name=${input}&key=${key}&token=${token}`;\n      fetch(url, {\n        method: \"PUT\"\n      });\n      this.state.checklist.forEach((obj, index, arr) => {\n        let c;\n\n        if (obj.checklistid === checklistid) {\n          c = obj.checkitems;\n          c.map(data => {\n            if (obj.checklistid === checkitemid) {\n              data.name = input;\n            }\n\n            return data;\n          });\n          console.log(c);\n          let newchecklist = this.state.checklist;\n          newchecklist[index] = {\n            checkitems: c,\n            name: input,\n            checklistid: checklistid,\n            key: checklistid\n          };\n          console.log(newchecklist);\n          this.setState({\n            checklist: newchecklist\n          });\n        }\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        input: e.target.value\n      });\n    };\n\n    this.deleteChecklist = async (e, checklistid) => {\n      e.preventDefault();\n      let url = `https://api.trello.com/1/checklists/${checklistid}?key=${key}&token=${token}`;\n      await fetch(url, {\n        method: \"DELETE\"\n      });\n      this.setState({\n        checklist: this.state.checklist.filter(obj => obj.checklistid !== checklistid)\n      });\n    };\n\n    this.state = {\n      show: this.props.show,\n      updateCheckItem: true,\n      addCheckitem: false,\n      addChecklist: false,\n      removeModal: this.props.removeModal\n    };\n  }\n\n  async componentDidMount() {\n    this.props.getChecklists(this.props.cardid);\n  }\n\n  render() {\n    console.log(this.props.cardid);\n    const {\n      addCheckitem,\n      addChecklist,\n      updateCheckItem\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: this.props.show,\n      onHide: this.props.removeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }\n    }, this.props.modal.name)), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }\n    }, addChecklist ? /*#__PURE__*/React.createElement(Addchecklist, {\n      onAdd: this.handleAddChecklist,\n      onDelete: this.cancelAddChecklist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-checklist\",\n      onClick: this.showAddChecklist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 15\n      }\n    }, \"Add checklist\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"checklist mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }\n    }, this.state.checklist.map(obj => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form mt-4\",\n        key: obj.checklistid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 19\n        }\n      }, obj.name), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: e => this.deleteChecklist(e, obj.checklistid),\n        className: \"btn btn-light float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 19\n        }\n      }, \"Remove\"), obj.checkitems.map(checkitem => {\n        return updateCheckItem && checkitem.name === this.state.checkitemname ? /*#__PURE__*/React.createElement(AddCheckitem, {\n          checkitemid: checkitem.id,\n          checklistid: obj.checklistid,\n          itemname: checkitem.name,\n          onAdd: this.handleUpdateCheckitem,\n          onRemove: this.removeUpdateCheckItem,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 23\n          }\n        }) : /*#__PURE__*/React.createElement(\"div\", {\n          onClick: e => this.checklistItemUpdate(e, checkitem.name),\n          className: \"checklistitems mt-3 update\",\n          key: checkitem.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(AddCheckbox, {\n          key: obj.checklistid,\n          checklistid: obj.checklistid,\n          checkitemid: checkitem.id,\n          updateState: this.updateCheckitemstate,\n          name: checkitem.name,\n          deleteCheckitem: this.handleDeleteCheckItem,\n          state: checkitem.state,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }\n        }));\n      }), addCheckitem && obj.name === this.state.checklistname ? /*#__PURE__*/React.createElement(Additem, {\n        onAdd: this.handleAddCheckitem,\n        onRemove: this.removeChecklistitem,\n        checklistid: obj.checklistid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }\n      }) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"add-item\",\n        onClick: () => this.showAddCheckitem(obj.name, obj.checklistid),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 23\n        }\n      }, \"add item\")));\n    }))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.props.removeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }\n    }, \"Close\")));\n  }\n\n}\n\nexport default ChecklistModal;","map":{"version":3,"sources":["/home/mamatha/react-redux/src/components/Modal.js"],"names":["React","Component","connect","Modal","Button","Addchecklist","AddCheckitem","AddCheckbox","Additem","getChecklists","addChecklist","deleteChecklist","ChecklistModal","constructor","props","handleAddChecklist","e","input","preventDefault","url","modal","id","key","token","data","fetch","method","json","setState","checklist","state","name","checklistid","checkitems","checkItems","removeUpdateCheckItem","updateCheckItem","checklistItemUpdate","checkitemname","console","log","target","className","removeChecklistitem","addCheckitem","showAddChecklist","cancelAddChecklist","showAddCheckitem","checklistname","handleAddCheckitem","then","res","result","forEach","obj","index","arr","c","push","newchecklist","idChecklist","handleDeleteCheckItem","checkitemid","filter","updateCheckitemstate","map","handleUpdateCheckitem","handleChange","value","show","removeModal","componentDidMount","cardid","render","checkitem"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Addchecklist from \"./addcard\";\nimport AddCheckitem from \"./addcheckitem\";\nimport AddCheckbox from \"./addcheckbox\";\nimport Additem from \"./additem\";\nimport {\n  getChecklists,\n  addChecklist,\n  deleteChecklist,\n} from \"../Actions/Modalaction\";\n\nclass ChecklistModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: this.props.show,\n      updateCheckItem: true,\n      addCheckitem: false,\n      addChecklist: false,\n      removeModal: this.props.removeModal,\n    };\n  }\n\n  handleAddChecklist = async (e, input) => {\n    e.preventDefault();\n    let url = `https://api.trello.com/1/checklists?idCard=${this.props.modal.id}&name=${input}&key=${key}&token=${token}`;\n    let data = await fetch(url, {\n      method: \"POST\",\n    });\n    data = await data.json();\n    this.setState({\n      checklist: [\n        ...this.state.checklist,\n        {\n          name: data.name,\n          checklistid: data.id,\n          checkitems: data.checkItems,\n          key: data.id,\n        },\n      ],\n      addChecklist: false,\n    });\n  };\n\n  removeUpdateCheckItem = (e) => {\n    e.preventDefault();\n    this.setState({\n      updateCheckItem: false,\n    });\n  };\n\n  checklistItemUpdate = (e, checkitemname) => {\n    console.log(checkitemname);\n    if (e.target.className === \"update\") {\n      return;\n    }\n    this.setState({\n      updateCheckItem: true,\n      checkitemname: checkitemname,\n    });\n  };\n\n  removeChecklistitem = (e) => {\n    e.preventDefault();\n    this.setState({\n      addCheckitem: false,\n    });\n  };\n\n  showAddChecklist = () => {\n    this.setState({\n      addChecklist: true,\n    });\n  };\n\n  cancelAddChecklist = (e) => {\n    console.log(e);\n    e.preventDefault();\n    this.setState({\n      addChecklist: false,\n    });\n  };\n\n  showAddCheckitem = (name, checklistid) => {\n    this.setState({\n      addCheckitem: true,\n      checklistname: name,\n      checklistid: checklistid,\n    });\n  };\n\n  handleAddCheckitem = (e, input, checklistid) => {\n    e.preventDefault();\n    console.log(input, e, checklistid);\n    let url = `https://api.trello.com/1/checklists/${checklistid}/checkItems?name=${input}&key=${key}&token=${token}`;\n    fetch(url, {\n      method: \"POST\",\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(result);\n        this.state.checklist.forEach((obj, index, arr) => {\n          let c;\n          if (obj.checklistid === checklistid) {\n            c = obj.checkitems;\n            c.push(result);\n            console.log(c);\n            let newchecklist = this.state.checklist;\n            newchecklist[index] = {\n              name: result.name,\n              checklistid: result.idChecklist,\n              checkitems: c,\n              key: result.idChecklist,\n            };\n            console.log(newchecklist);\n            this.setState({\n              checklist: newchecklist,\n              addCheckitem: true,\n            });\n          }\n        });\n      });\n  };\n\n  handleDeleteCheckItem = (e, checklistid, checkitemid) => {\n    console.log(e);\n    let url = `https://api.trello.com/1/checklists/${checklistid}/checkItems/${checkitemid}?key=${key}&token=${token}`;\n    fetch(url, {\n      method: \"DELETE\",\n    });\n    this.state.checklist.forEach((obj, index, arr) => {\n      let c;\n      if (obj.checklistid === checklistid) {\n        c = obj.checkitems.filter((data) => data.id !== checkitemid);\n        console.log(c);\n        let newchecklist = this.state.checklist;\n        newchecklist[index] = {\n          checkitems: c,\n          checklistid: obj.checklistid,\n          key: obj.checklistid,\n          name: obj.name,\n        };\n        console.log(newchecklist);\n        this.setState({\n          checklist: newchecklist,\n        });\n      }\n    });\n  };\n\n  updateCheckitemstate = (checklistid, checkitemid, state) => {\n    let url = `https://api.trello.com/1/cards/${this.props.modal.id}/checkItem/${checkitemid}?state=${state}&key=${key}&token=${token}`;\n    fetch(url, {\n      method: \"PUT\",\n    });\n    this.state.checklist.forEach((obj, index, arr) => {\n      let c;\n      if (obj.checklistid === checklistid) {\n        c = obj.checkitems;\n        c.map((data) => {\n          if (data.id === checkitemid) {\n            data.state = state;\n          }\n          return data;\n        });\n        console.log(c);\n        let newchecklist = this.state.checklist;\n        newchecklist[index] = {\n          checkitems: c,\n          name: obj.name,\n          checklistid: checklistid,\n          key: checklistid,\n        };\n        console.log(newchecklist);\n        this.setState({\n          checklist: newchecklist,\n        });\n      }\n    });\n  };\n\n  handleUpdateCheckitem = (e, input, checklistid, checkitemid) => {\n    e.preventDefault();\n    let url = `https://api.trello.com/1/cards/${this.props.modal.id}/checkItem/${checkitemid}?name=${input}&key=${key}&token=${token}`;\n    fetch(url, {\n      method: \"PUT\",\n    });\n    this.state.checklist.forEach((obj, index, arr) => {\n      let c;\n      if (obj.checklistid === checklistid) {\n        c = obj.checkitems;\n        c.map((data) => {\n          if (obj.checklistid === checkitemid) {\n            data.name = input;\n          }\n          return data;\n        });\n        console.log(c);\n        let newchecklist = this.state.checklist;\n        newchecklist[index] = {\n          checkitems: c,\n          name: input,\n          checklistid: checklistid,\n          key: checklistid,\n        };\n        console.log(newchecklist);\n        this.setState({\n          checklist: newchecklist,\n        });\n      }\n    });\n  };\n\n  handleChange = (e) => {\n    this.setState({ input: e.target.value });\n  };\n\n  deleteChecklist = async (e, checklistid) => {\n    e.preventDefault();\n    let url = `https://api.trello.com/1/checklists/${checklistid}?key=${key}&token=${token}`;\n    await fetch(url, {\n      method: \"DELETE\",\n    });\n    this.setState({\n      checklist: this.state.checklist.filter(\n        (obj) => obj.checklistid !== checklistid\n      ),\n    });\n  };\n\n  async componentDidMount() {\n    this.props.getChecklists(this.props.cardid);\n  }\n\n  render() {\n    console.log(this.props.cardid);\n    const { addCheckitem, addChecklist, updateCheckItem } = this.state;\n    return (\n      <Modal show={this.props.show} onHide={this.props.removeModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modal.name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {addChecklist ? (\n            <Addchecklist\n              onAdd={this.handleAddChecklist}\n              onDelete={this.cancelAddChecklist}\n            />\n          ) : (\n            <div className=\"add-checklist\" onClick={this.showAddChecklist}>\n              <button className=\"btn btn-light\">Add checklist</button>\n            </div>\n          )}\n          <div className=\"checklist mt-2\">\n            {this.state.checklist.map((obj) => {\n              return (\n                <div className=\"form mt-4\" key={obj.checklistid}>\n                  <label className=\"label\">{obj.name}</label>\n                  <button\n                    onClick={(e) => this.deleteChecklist(e, obj.checklistid)}\n                    className=\"btn btn-light float-right\"\n                  >\n                    Remove\n                  </button>\n                  {obj.checkitems.map((checkitem) => {\n                    return updateCheckItem &&\n                      checkitem.name === this.state.checkitemname ? (\n                      <AddCheckitem\n                        checkitemid={checkitem.id}\n                        checklistid={obj.checklistid}\n                        itemname={checkitem.name}\n                        onAdd={this.handleUpdateCheckitem}\n                        onRemove={this.removeUpdateCheckItem}\n                      />\n                    ) : (\n                      <div\n                        onClick={(e) =>\n                          this.checklistItemUpdate(e, checkitem.name)\n                        }\n                        className=\"checklistitems mt-3 update\"\n                        key={checkitem.id}\n                      >\n                        <AddCheckbox\n                          key={obj.checklistid}\n                          checklistid={obj.checklistid}\n                          checkitemid={checkitem.id}\n                          updateState={this.updateCheckitemstate}\n                          name={checkitem.name}\n                          deleteCheckitem={this.handleDeleteCheckItem}\n                          state={checkitem.state}\n                        />\n                      </div>\n                    );\n                  })}\n                  {addCheckitem && obj.name === this.state.checklistname ? (\n                    <Additem\n                      onAdd={this.handleAddCheckitem}\n                      onRemove={this.removeChecklistitem}\n                      checklistid={obj.checklistid}\n                    />\n                  ) : (\n                    <div\n                      className=\"add-item\"\n                      onClick={() =>\n                        this.showAddCheckitem(obj.name, obj.checklistid)\n                      }\n                    >\n                      <Button variant=\"light\">add item</Button>\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.removeModal}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\nexport default ChecklistModal;\n"]},"metadata":{},"sourceType":"module"}