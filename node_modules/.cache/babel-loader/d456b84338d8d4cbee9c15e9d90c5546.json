{"ast":null,"code":"var _jsxFileName = \"/home/mamatha/changes/src/components/Boardfile.js\";\nimport React, { Component } from \"react\";\nimport Board from \"./Board\";\nimport Listfile from \"./Listfile\";\nconst token = \"52615ebb3fb8336a474fd1ab9ec8ae053f5321433e1cbfefefb33a1779816ba9\";\nconst url = \"https://api.trello.com\";\nconst key = \"23fe0646c0d1253eb430f7e02db925a0\";\n\nclass Boardfile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      boards: []\n    };\n  }\n\n  componentDidMount() {\n    let url = `https://api.trello.com/1/members/me/boards?key=${key}&token=${token}`;\n    fetch(url, {\n      method: \"GET\"\n    }).then(res => res.json()).then(res => {\n      let data = res;\n\n      for (let i = 0; i < data.length; i++) {\n        let boardname = data[i].name;\n        let boardid = data[i].id;\n        this.setState(() => ({\n          boards: [...this.state.boards, {\n            name: boardname,\n            id: boardid\n          }]\n        }));\n      }\n    });\n  }\n\n  render() {\n    const board = this.state.boards.map(board => {\n      return /*#__PURE__*/React.createElement(Board, {\n        key: board.id,\n        id: board.id,\n        name: board.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 14\n        }\n      });\n      console.log(board);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 14\n        }\n      }, board);\n    });\n  }\n\n}\n\nexport default Boardfile;","map":{"version":3,"sources":["/home/mamatha/changes/src/components/Boardfile.js"],"names":["React","Component","Board","Listfile","token","url","key","Boardfile","state","boards","componentDidMount","fetch","method","then","res","json","data","i","length","boardname","name","boardid","id","setState","render","board","map","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,MAAMC,KAAK,GACT,kEADF;AAEA,MAAMC,GAAG,GAAG,wBAAZ;AACA,MAAMC,GAAG,GAAG,kCAAZ;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCO,KADgC,GACxB;AACNC,MAAAA,MAAM,EAAE;AADF,KADwB;AAAA;;AAKhCC,EAAAA,iBAAiB,GAAG;AAClB,QAAIL,GAAG,GAAI,kDAAiDC,GAAI,UAASF,KAAM,EAA/E;AACAO,IAAAA,KAAK,CAACN,GAAD,EAAM;AACTO,MAAAA,MAAM,EAAE;AADC,KAAN,CAAL,CAGGC,IAHH,CAGSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHjB,EAIGF,IAJH,CAISC,GAAD,IAAS;AACb,UAAIE,IAAI,GAAGF,GAAX;;AACA,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,YAAIE,SAAS,GAAGH,IAAI,CAACC,CAAD,CAAJ,CAAQG,IAAxB;AACA,YAAIC,OAAO,GAAGL,IAAI,CAACC,CAAD,CAAJ,CAAQK,EAAtB;AACA,aAAKC,QAAL,CAAc,OAAO;AACnBd,UAAAA,MAAM,EAAE,CACN,GAAG,KAAKD,KAAL,CAAWC,MADR,EAEN;AACEW,YAAAA,IAAI,EAAED,SADR;AAEEG,YAAAA,EAAE,EAAED;AAFN,WAFM;AADW,SAAP,CAAd;AASD;AACF,KAnBH;AAoBD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG,KAAKjB,KAAL,CAAWC,MAAX,CAAkBiB,GAAlB,CAAuBD,KAAD,IAAW;AAC7C,0BAAO,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEA,KAAK,CAACH,EAAlB;AAAsB,QAAA,EAAE,EAAEG,KAAK,CAACH,EAAhC;AAAoC,QAAA,IAAI,EAAEG,KAAK,CAACL,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAEAO,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,0BAAO;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgDA,KAAhD,CAAP;AACD,KALa,CAAd;AAMD;;AApC+B;;AAsClC,eAAelB,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Board from \"./Board\";\nimport Listfile from \"./Listfile\";\nconst token =\n  \"52615ebb3fb8336a474fd1ab9ec8ae053f5321433e1cbfefefb33a1779816ba9\";\nconst url = \"https://api.trello.com\";\nconst key = \"23fe0646c0d1253eb430f7e02db925a0\";\n\nclass Boardfile extends Component {\n  state = {\n    boards: [],\n  };\n\n  componentDidMount() {\n    let url = `https://api.trello.com/1/members/me/boards?key=${key}&token=${token}`;\n    fetch(url, {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        let data = res;\n        for (let i = 0; i < data.length; i++) {\n          let boardname = data[i].name;\n          let boardid = data[i].id;\n          this.setState(() => ({\n            boards: [\n              ...this.state.boards,\n              {\n                name: boardname,\n                id: boardid,\n              },\n            ],\n          }));\n        }\n      });\n  }\n\n  render() {\n    const board = this.state.boards.map((board) => {\n      return <Board key={board.id} id={board.id} name={board.name} />;\n\n      console.log(board);\n      return <div className=\"d-flex justify-content-center\">{board}</div>;\n    });\n  }\n}\nexport default Boardfile;\n"]},"metadata":{},"sourceType":"module"}