{"ast":null,"code":"var _jsxFileName = \"/home/mamatha/react-redux/src/components/Modal.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Addchecklist from \"./addcard\";\nimport Additem from \"./additem\";\nimport Checklist from \"./Checklist\";\nimport { getChecklists, addChecklist, deleteChecklist } from \"../Actions/Modalaction\";\n\nclass ChecklistModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAddChecklist = (e, input) => {\n      e.preventDefault();\n      this.props.addChecklist(input, this.props.modal.id);\n    };\n\n    this.showAddChecklist = () => {\n      this.setState({\n        addChecklist: true\n      });\n    };\n\n    this.cancelAddChecklist = e => {\n      console.log(e);\n      e.preventDefault();\n      this.setState({\n        addChecklist: false\n      });\n    };\n\n    this.deleteChecklist = (e, checklistid) => {\n      e.preventDefault();\n      this.props.deleteChecklist(checklistid);\n    };\n\n    this.state = {\n      show: this.props.show,\n      // updateCheckItem: true,\n      // addCheckitem: false,\n      addChecklist: false,\n      removeModal: this.props.removeModal\n    };\n  }\n\n  componentDidMount() {\n    this.props.getChecklists(this.props.modal.id);\n  }\n\n  render() {\n    console.log(this.props.modal.id);\n    const {\n      addChecklist\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: this.props.show,\n      onHide: this.props.removeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }\n    }, this.props.modal.name)), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }\n    }, addChecklist ? /*#__PURE__*/React.createElement(Addchecklist, {\n      onAdd: this.handleAddChecklist,\n      onDelete: this.cancelAddChecklist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-checklist\",\n      onClick: this.showAddChecklist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }\n    }, \"Add checklist\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"checklist mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }\n    }, this.props.checklists.map(checklist => {\n      return /*#__PURE__*/React.createElement(Checklist, {\n        key: checklist.id,\n        checklist: checklist,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 22\n        }\n      });\n    }))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.props.removeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }\n    }, \"Close\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  checklists: state.Modalreducer.checklists\n});\n\nexport default connect(mapStateToProps, {\n  getChecklists,\n  addChecklist,\n  deleteChecklist\n})(ChecklistModal);","map":{"version":3,"sources":["/home/mamatha/react-redux/src/components/Modal.js"],"names":["React","Component","connect","Modal","Button","Addchecklist","Additem","Checklist","getChecklists","addChecklist","deleteChecklist","ChecklistModal","constructor","props","handleAddChecklist","e","input","preventDefault","modal","id","showAddChecklist","setState","cancelAddChecklist","console","log","checklistid","state","show","removeModal","componentDidMount","render","name","checklists","map","checklist","mapStateToProps","Modalreducer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Addchecklist from \"./addcard\";\nimport Additem from \"./additem\";\nimport Checklist from \"./Checklist\";\nimport {\n  getChecklists,\n  addChecklist,\n  deleteChecklist,\n} from \"../Actions/Modalaction\";\n\nclass ChecklistModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: this.props.show,\n      // updateCheckItem: true,\n      // addCheckitem: false,\n      addChecklist: false,\n      removeModal: this.props.removeModal,\n    };\n  }\n\n  handleAddChecklist = (e, input) => {\n    e.preventDefault();\n    this.props.addChecklist(input, this.props.modal.id);\n  };\n\n  // removeUpdateCheckItem = (e) => {\n  //   e.preventDefault();\n  //   this.setState({\n  //     updateCheckItem: false,\n  //   });\n  // };\n\n  // checklistItemUpdate = (e, checkitemname) => {\n  //   console.log(checkitemname);\n  //   if (e.target.className === \"update\") {\n  //     return;\n  //   }\n  //   this.setState({\n  //     updateCheckItem: true,\n  //     checkitemname: checkitemname,\n  //   });\n  // };\n\n  // removeChecklistitem = (e) => {\n  //   e.preventDefault();\n  //   this.setState({\n  //     addCheckitem: false,\n  //   });\n  // };\n\n  showAddChecklist = () => {\n    this.setState({\n      addChecklist: true,\n    });\n  };\n\n  cancelAddChecklist = (e) => {\n    console.log(e);\n    e.preventDefault();\n    this.setState({\n      addChecklist: false,\n    });\n  };\n\n  // showAddCheckitem = (name, checklistid) => {\n  //   this.setState({\n  //     addCheckitem: true,\n  //     checklistname: name,\n  //     checklistid: checklistid,\n  //   });\n  // };\n\n  // handleAddCheckitem = (e, input, checklistid) => {\n  //   e.preventDefault();\n  //   console.log(input, e, checklistid);\n  //   let url = `https://api.trello.com/1/checklists/${checklistid}/checkItems?name=${input}&key=${key}&token=${token}`;\n  //   fetch(url, {\n  //     method: \"POST\",\n  //   })\n  //     .then((res) => res.json())\n  //     .then((result) => {\n  //       console.log(result);\n  //       this.state.checklist.forEach((obj, index, arr) => {\n  //         let c;\n  //         if (obj.checklistid === checklistid) {\n  //           c = obj.checkitems;\n  //           c.push(result);\n  //           console.log(c);\n  //           let newchecklist = this.state.checklist;\n  //           newchecklist[index] = {\n  //             name: result.name,\n  //             checklistid: result.idChecklist,\n  //             checkitems: c,\n  //             key: result.idChecklist,\n  //           };\n  //           console.log(newchecklist);\n  //           this.setState({\n  //             checklist: newchecklist,\n  //             addCheckitem: true,\n  //           });\n  //         }\n  //       });\n  //     });\n  // };\n\n  // handleDeleteCheckItem = (e, checklistid, checkitemid) => {\n  //   console.log(e);\n  //   let url = `https://api.trello.com/1/checklists/${checklistid}/checkItems/${checkitemid}?key=${key}&token=${token}`;\n  //   fetch(url, {\n  //     method: \"DELETE\",\n  //   });\n  //   this.state.checklist.forEach((obj, index, arr) => {\n  //     let c;\n  //     if (obj.checklistid === checklistid) {\n  //       c = obj.checkitems.filter((data) => data.id !== checkitemid);\n  //       console.log(c);\n  //       let newchecklist = this.state.checklist;\n  //       newchecklist[index] = {\n  //         checkitems: c,\n  //         checklistid: obj.checklistid,\n  //         key: obj.checklistid,\n  //         name: obj.name,\n  //       };\n  //       console.log(newchecklist);\n  //       this.setState({\n  //         checklist: newchecklist,\n  //       });\n  //     }\n  //   });\n  // };\n\n  // updateCheckitemstate = (checklistid, checkitemid, state) => {\n  //   let url = `https://api.trello.com/1/cards/${this.props.modal.id}/checkItem/${checkitemid}?state=${state}&key=${key}&token=${token}`;\n  //   fetch(url, {\n  //     method: \"PUT\",\n  //   });\n  //   this.state.checklist.forEach((obj, index, arr) => {\n  //     let c;\n  //     if (obj.checklistid === checklistid) {\n  //       c = obj.checkitems;\n  //       c.map((data) => {\n  //         if (data.id === checkitemid) {\n  //           data.state = state;\n  //         }\n  //         return data;\n  //       });\n  //       console.log(c);\n  //       let newchecklist = this.state.checklist;\n  //       newchecklist[index] = {\n  //         checkitems: c,\n  //         name: obj.name,\n  //         checklistid: checklistid,\n  //         key: checklistid,\n  //       };\n  //       console.log(newchecklist);\n  //       this.setState({\n  //         checklist: newchecklist,\n  //       });\n  //     }\n  //   });\n  // };\n\n  // handleUpdateCheckitem = (e, input, checklistid, checkitemid) => {\n  //   e.preventDefault();\n  //   let url = `https://api.trello.com/1/cards/${this.props.modal.id}/checkItem/${checkitemid}?name=${input}&key=${key}&token=${token}`;\n  //   fetch(url, {\n  //     method: \"PUT\",\n  //   });\n  //   this.state.checklist.forEach((obj, index, arr) => {\n  //     let c;\n  //     if (obj.checklistid === checklistid) {\n  //       c = obj.checkitems;\n  //       c.map((data) => {\n  //         if (obj.checklistid === checkitemid) {\n  //           data.name = input;\n  //         }\n  //         return data;\n  //       });\n  //       console.log(c);\n  //       let newchecklist = this.state.checklist;\n  //       newchecklist[index] = {\n  //         checkitems: c,\n  //         name: input,\n  //         checklistid: checklistid,\n  //         key: checklistid,\n  //       };\n  //       console.log(newchecklist);\n  //       this.setState({\n  //         checklist: newchecklist,\n  //       });\n  //     }\n  //   });\n  // };\n\n  // handleChange = (e) => {\n  //   this.setState({ input: e.target.value });\n  // };\n\n  deleteChecklist = (e, checklistid) => {\n    e.preventDefault();\n    this.props.deleteChecklist(checklistid);\n  };\n\n  componentDidMount() {\n    this.props.getChecklists(this.props.modal.id);\n  }\n\n  render() {\n    console.log(this.props.modal.id);\n    const { addChecklist } = this.state;\n    return (\n      <Modal show={this.props.show} onHide={this.props.removeModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modal.name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div>\n            {addChecklist ? (\n              <Addchecklist\n                onAdd={this.handleAddChecklist}\n                onDelete={this.cancelAddChecklist}\n              />\n            ) : (\n              <div className=\"add-checklist\" onClick={this.showAddChecklist}>\n                <button className=\"btn btn-light\">Add checklist</button>\n              </div>\n            )}\n          </div>\n\n          <div className=\"checklist mt-2\">\n            {this.props.checklists.map((checklist) => {\n              return <Checklist key={checklist.id} checklist={checklist} />;\n            })}\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.removeModal}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  checklists: state.Modalreducer.checklists,\n});\nexport default connect(mapStateToProps, {\n  getChecklists,\n  addChecklist,\n  deleteChecklist,\n})(ChecklistModal);\n"]},"metadata":{},"sourceType":"module"}