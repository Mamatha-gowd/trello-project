{"ast":null,"code":"var _jsxFileName = \"/home/mamatha/react-redux/src/components/Modal.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Addchecklist from \"./addcard\";\nimport AddCheckitem from \"./addcheckitem\";\nimport AddCheckbox from \"./addcheckbox\";\nimport Additem from \"./additem\";\nimport { getChecklists, addChecklist, deleteChecklist } from \"../Actions/Modalaction\";\nconst token = \"52615ebb3fb8336a474fd1ab9ec8ae053f5321433e1cbfefefb33a1779816ba9\";\nconst key = \"23fe0646c0d1253eb430f7e02db925a0\";\n\nclass ChecklistModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAddChecklist = async (e, input) => {\n      e.preventDefault();\n      this.props.addChecklist(input, this.props.modal.id);\n    };\n\n    this.showAddChecklist = () => {\n      this.setState({\n        addChecklist: true\n      });\n    };\n\n    this.cancelAddChecklist = e => {\n      console.log(e);\n      e.preventDefault();\n      this.setState({\n        addChecklist: false\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        input: e.target.value\n      });\n    };\n\n    this.deleteChecklist = async (e, checklistid) => {\n      e.preventDefault();\n    };\n\n    this.state = {\n      show: this.props.show,\n      // updateCheckItem: true,\n      // addCheckitem: false,\n      addChecklist: false,\n      removeModal: this.props.removeModal\n    };\n  }\n\n  async componentDidMount() {\n    this.props.getChecklists(this.props.modal.id);\n  }\n\n  render() {\n    console.log(this.props.modal.id);\n    const {\n      addCheckitem,\n      addChecklist,\n      updateCheckItem\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: this.props.show,\n      onHide: this.props.removeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }\n    }, this.props.modal.name)), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }\n    }, addChecklist ? /*#__PURE__*/React.createElement(Addchecklist, {\n      onAdd: this.handleAddChecklist,\n      onDelete: this.cancelAddChecklist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-checklist\",\n      onClick: this.showAddChecklist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 15\n      }\n    }, \"Add checklist\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"checklist mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }\n    }, this.props.checklists.map(obj => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form mt-4\",\n        key: obj.checklistid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 19\n        }\n      }, obj.name), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: e => this.deleteChecklist(e, obj.checklistid),\n        className: \"btn btn-light float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 19\n        }\n      }, \"Remove\"), /*#__PURE__*/React.createElement(Checklist, {\n        key: obj.id,\n        checklist: obj,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 19\n        }\n      }));\n    }))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.props.removeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }\n    }, \"Close\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  checklists: state.Modalreducer.checklists\n});\n\nexport default connect(mapStateToProps, {\n  getChecklists,\n  addChecklist,\n  deleteChecklist\n})(ChecklistModal);","map":{"version":3,"sources":["/home/mamatha/react-redux/src/components/Modal.js"],"names":["React","Component","connect","Modal","Button","Addchecklist","AddCheckitem","AddCheckbox","Additem","getChecklists","addChecklist","deleteChecklist","token","key","ChecklistModal","constructor","props","handleAddChecklist","e","input","preventDefault","modal","id","showAddChecklist","setState","cancelAddChecklist","console","log","handleChange","target","value","checklistid","state","show","removeModal","componentDidMount","render","addCheckitem","updateCheckItem","name","checklists","map","obj","mapStateToProps","Modalreducer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Addchecklist from \"./addcard\";\nimport AddCheckitem from \"./addcheckitem\";\nimport AddCheckbox from \"./addcheckbox\";\nimport Additem from \"./additem\";\nimport {\n  getChecklists,\n  addChecklist,\n  deleteChecklist,\n} from \"../Actions/Modalaction\";\nconst token =\n  \"52615ebb3fb8336a474fd1ab9ec8ae053f5321433e1cbfefefb33a1779816ba9\";\nconst key = \"23fe0646c0d1253eb430f7e02db925a0\";\n\nclass ChecklistModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: this.props.show,\n      // updateCheckItem: true,\n      // addCheckitem: false,\n      addChecklist: false,\n      removeModal: this.props.removeModal,\n    };\n  }\n\n  handleAddChecklist = async (e, input) => {\n    e.preventDefault();\n    this.props.addChecklist(input, this.props.modal.id);\n  };\n\n  // removeUpdateCheckItem = (e) => {\n  //   e.preventDefault();\n  //   this.setState({\n  //     updateCheckItem: false,\n  //   });\n  // };\n\n  // checklistItemUpdate = (e, checkitemname) => {\n  //   console.log(checkitemname);\n  //   if (e.target.className === \"update\") {\n  //     return;\n  //   }\n  //   this.setState({\n  //     updateCheckItem: true,\n  //     checkitemname: checkitemname,\n  //   });\n  // };\n\n  // removeChecklistitem = (e) => {\n  //   e.preventDefault();\n  //   this.setState({\n  //     addCheckitem: false,\n  //   });\n  // };\n\n  showAddChecklist = () => {\n    this.setState({\n      addChecklist: true,\n    });\n  };\n\n  cancelAddChecklist = (e) => {\n    console.log(e);\n    e.preventDefault();\n    this.setState({\n      addChecklist: false,\n    });\n  };\n\n  // showAddCheckitem = (name, checklistid) => {\n  //   this.setState({\n  //     addCheckitem: true,\n  //     checklistname: name,\n  //     checklistid: checklistid,\n  //   });\n  // };\n\n  // handleAddCheckitem = (e, input, checklistid) => {\n  //   e.preventDefault();\n  //   console.log(input, e, checklistid);\n  //   let url = `https://api.trello.com/1/checklists/${checklistid}/checkItems?name=${input}&key=${key}&token=${token}`;\n  //   fetch(url, {\n  //     method: \"POST\",\n  //   })\n  //     .then((res) => res.json())\n  //     .then((result) => {\n  //       console.log(result);\n  //       this.state.checklist.forEach((obj, index, arr) => {\n  //         let c;\n  //         if (obj.checklistid === checklistid) {\n  //           c = obj.checkitems;\n  //           c.push(result);\n  //           console.log(c);\n  //           let newchecklist = this.state.checklist;\n  //           newchecklist[index] = {\n  //             name: result.name,\n  //             checklistid: result.idChecklist,\n  //             checkitems: c,\n  //             key: result.idChecklist,\n  //           };\n  //           console.log(newchecklist);\n  //           this.setState({\n  //             checklist: newchecklist,\n  //             addCheckitem: true,\n  //           });\n  //         }\n  //       });\n  //     });\n  // };\n\n  // handleDeleteCheckItem = (e, checklistid, checkitemid) => {\n  //   console.log(e);\n  //   let url = `https://api.trello.com/1/checklists/${checklistid}/checkItems/${checkitemid}?key=${key}&token=${token}`;\n  //   fetch(url, {\n  //     method: \"DELETE\",\n  //   });\n  //   this.state.checklist.forEach((obj, index, arr) => {\n  //     let c;\n  //     if (obj.checklistid === checklistid) {\n  //       c = obj.checkitems.filter((data) => data.id !== checkitemid);\n  //       console.log(c);\n  //       let newchecklist = this.state.checklist;\n  //       newchecklist[index] = {\n  //         checkitems: c,\n  //         checklistid: obj.checklistid,\n  //         key: obj.checklistid,\n  //         name: obj.name,\n  //       };\n  //       console.log(newchecklist);\n  //       this.setState({\n  //         checklist: newchecklist,\n  //       });\n  //     }\n  //   });\n  // };\n\n  // updateCheckitemstate = (checklistid, checkitemid, state) => {\n  //   let url = `https://api.trello.com/1/cards/${this.props.modal.id}/checkItem/${checkitemid}?state=${state}&key=${key}&token=${token}`;\n  //   fetch(url, {\n  //     method: \"PUT\",\n  //   });\n  //   this.state.checklist.forEach((obj, index, arr) => {\n  //     let c;\n  //     if (obj.checklistid === checklistid) {\n  //       c = obj.checkitems;\n  //       c.map((data) => {\n  //         if (data.id === checkitemid) {\n  //           data.state = state;\n  //         }\n  //         return data;\n  //       });\n  //       console.log(c);\n  //       let newchecklist = this.state.checklist;\n  //       newchecklist[index] = {\n  //         checkitems: c,\n  //         name: obj.name,\n  //         checklistid: checklistid,\n  //         key: checklistid,\n  //       };\n  //       console.log(newchecklist);\n  //       this.setState({\n  //         checklist: newchecklist,\n  //       });\n  //     }\n  //   });\n  // };\n\n  // handleUpdateCheckitem = (e, input, checklistid, checkitemid) => {\n  //   e.preventDefault();\n  //   let url = `https://api.trello.com/1/cards/${this.props.modal.id}/checkItem/${checkitemid}?name=${input}&key=${key}&token=${token}`;\n  //   fetch(url, {\n  //     method: \"PUT\",\n  //   });\n  //   this.state.checklist.forEach((obj, index, arr) => {\n  //     let c;\n  //     if (obj.checklistid === checklistid) {\n  //       c = obj.checkitems;\n  //       c.map((data) => {\n  //         if (obj.checklistid === checkitemid) {\n  //           data.name = input;\n  //         }\n  //         return data;\n  //       });\n  //       console.log(c);\n  //       let newchecklist = this.state.checklist;\n  //       newchecklist[index] = {\n  //         checkitems: c,\n  //         name: input,\n  //         checklistid: checklistid,\n  //         key: checklistid,\n  //       };\n  //       console.log(newchecklist);\n  //       this.setState({\n  //         checklist: newchecklist,\n  //       });\n  //     }\n  //   });\n  // };\n\n  handleChange = (e) => {\n    this.setState({ input: e.target.value });\n  };\n\n  deleteChecklist = async (e, checklistid) => {\n    e.preventDefault();\n  };\n\n  async componentDidMount() {\n    this.props.getChecklists(this.props.modal.id);\n  }\n\n  render() {\n    console.log(this.props.modal.id);\n    const { addCheckitem, addChecklist, updateCheckItem } = this.state;\n    return (\n      <Modal show={this.props.show} onHide={this.props.removeModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modal.name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {addChecklist ? (\n            <Addchecklist\n              onAdd={this.handleAddChecklist}\n              onDelete={this.cancelAddChecklist}\n            />\n          ) : (\n            <div className=\"add-checklist\" onClick={this.showAddChecklist}>\n              <button className=\"btn btn-light\">Add checklist</button>\n            </div>\n          )}\n          <div className=\"checklist mt-2\">\n            {this.props.checklists.map((obj) => {\n              return (\n                <div className=\"form mt-4\" key={obj.checklistid}>\n                  <label className=\"label\">{obj.name}</label>\n                  <button\n                    onClick={(e) => this.deleteChecklist(e, obj.checklistid)}\n                    className=\"btn btn-light float-right\"\n                  >\n                    Remove\n                  </button>\n                  <Checklist key={obj.id} checklist={obj} />\n                </div>\n              );\n            })}\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.removeModal}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  checklists: state.Modalreducer.checklists,\n});\nexport default connect(mapStateToProps, {\n  getChecklists,\n  addChecklist,\n  deleteChecklist,\n})(ChecklistModal);\n"]},"metadata":{},"sourceType":"module"}