{"ast":null,"code":"var _jsxFileName = \"/home/mamatha/trello-react-mamatha/src/components/Modal.js\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Input from \"./addcard\";\nimport CheckList from \"./checklist\";\nconst token = \"52615ebb3fb8336a474fd1ab9ec8ae053f5321433e1cbfefefb33a1779816ba9\";\nconst url = \"https://api.trello.com\";\nconst key = \"23fe0646c0d1253eb430f7e02db925a0\";\n\nclass ChecklistModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInput = async (e, input) => {\n      e.preventDefault();\n      let url = `https://api.trello.com/1/checklists?idCard=${this.props.modal.id}&name=${input}&key=${key}&token=${token}`;\n      let data = await fetch(url, {\n        method: \"POST\"\n      });\n      data = await data.json();\n      this.setState({\n        checklist: [...this.state.checklist, {\n          name: data.name,\n          checklistid: data.id,\n          checkitems: data.checkItems,\n          key: data.id\n        }]\n      });\n    };\n\n    this.handleCheckitem = (e, input, checklistid) => {\n      e.preventDefault();\n      console.log(input, e, checklistid); // let url = `https://api.trello.com/1/checklists/${this.props.checklistdata.checklistid}/checkItems?name=${input}&key=${key}&token=${token}`;\n      // fetch(url, {\n      //   method: \"POST\",\n      // })\n      //   .then((res) => res.json())\n      //   .then((result) => {\n      //     this.setState({\n      //       checkItems: result,\n      //     });\n      //   });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        input: e.target.value\n      });\n    };\n\n    this.deleteChecklist = async (e, checklistid) => {\n      e.preventDefault();\n      let url = `https://api.trello.com/1/checklists/${checklistid}?key=${key}&token=${token}`;\n      await fetch(url, {\n        method: \"DELETE\"\n      });\n      this.setState({\n        checklist: this.state.checklist.filter(obj => obj.checklistid !== checklistid)\n      });\n    };\n\n    this.state = {\n      show: this.props.show,\n      checklist: [],\n      //cardId: this.props.cards.id,\n      // addChecklist: false,\n      removeModal: this.props.removeModal,\n      input: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    let url = `https://api.trello.com/1/cards/${this.props.modal.id}/checklists?key=${key}&token=${token}`;\n    let data = await fetch(url, {\n      method: \"GET\"\n    });\n    data = await data.json();\n    console.log(data);\n    data.map(obj => this.setState({\n      checklist: [...this.state.checklist, {\n        name: obj.name,\n        checklistid: obj.id,\n        checkitems: obj.checkItems,\n        key: obj.id\n      }]\n    }));\n  }\n\n  render() {\n    const {\n      input\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: this.props.show,\n      onHide: this.props.removeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, this.props.modal.name)), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      classname: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, \"Add checklist\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control mb-2\",\n      onChange: this.handleChange,\n      value: input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success mt-2\",\n      onClick: e => this.handleInput(e, input),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, \"Add\"))), this.state.checklist.map(items => {\n      console.log(items);\n      return /*#__PURE__*/React.createElement(CheckList, {\n        key: items.id,\n        checklistdata: items,\n        deleteChecklist: this.deleteChecklist,\n        handleCheckitem: this.handleCheckitem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }\n      });\n    })), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.props.removeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, \"Close\")));\n  }\n\n}\n\nexport default ChecklistModal;","map":{"version":3,"sources":["/home/mamatha/trello-react-mamatha/src/components/Modal.js"],"names":["React","Component","Modal","Button","Input","CheckList","token","url","key","ChecklistModal","constructor","props","handleInput","e","input","preventDefault","modal","id","data","fetch","method","json","setState","checklist","state","name","checklistid","checkitems","checkItems","handleCheckitem","console","log","handleChange","target","value","deleteChecklist","filter","obj","show","removeModal","componentDidMount","map","render","items"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kCAAP;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,MAAMC,KAAK,GACT,kEADF;AAEA,MAAMC,GAAG,GAAG,wBAAZ;AACA,MAAMC,GAAG,GAAG,kCAAZ;;AAEA,MAAMC,cAAN,SAA6BR,SAA7B,CAAuC;AACrCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,WAZmB,GAYL,OAAOC,CAAP,EAAUC,KAAV,KAAoB;AAChCD,MAAAA,CAAC,CAACE,cAAF;AACA,UAAIR,GAAG,GAAI,8CAA6C,KAAKI,KAAL,CAAWK,KAAX,CAAiBC,EAAG,SAAQH,KAAM,QAAON,GAAI,UAASF,KAAM,EAApH;AACA,UAAIY,IAAI,GAAG,MAAMC,KAAK,CAACZ,GAAD,EAAM;AAC1Ba,QAAAA,MAAM,EAAE;AADkB,OAAN,CAAtB;AAGAF,MAAAA,IAAI,GAAG,MAAMA,IAAI,CAACG,IAAL,EAAb;AACA,WAAKC,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAE,CACT,GAAG,KAAKC,KAAL,CAAWD,SADL,EAET;AACEE,UAAAA,IAAI,EAAEP,IAAI,CAACO,IADb;AAEEC,UAAAA,WAAW,EAAER,IAAI,CAACD,EAFpB;AAGEU,UAAAA,UAAU,EAAET,IAAI,CAACU,UAHnB;AAIEpB,UAAAA,GAAG,EAAEU,IAAI,CAACD;AAJZ,SAFS;AADC,OAAd;AAWD,KA9BkB;;AAAA,SAgCnBY,eAhCmB,GAgCD,CAAChB,CAAD,EAAIC,KAAJ,EAAWY,WAAX,KAA2B;AAC3Cb,MAAAA,CAAC,CAACE,cAAF;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ,EAAmBD,CAAnB,EAAsBa,WAAtB,EAF2C,CAG3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KA7CkB;;AAAA,SA+CnBM,YA/CmB,GA+CHnB,CAAD,IAAO;AACpB,WAAKS,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAED,CAAC,CAACoB,MAAF,CAASC;AAAlB,OAAd;AACD,KAjDkB;;AAAA,SAmDnBC,eAnDmB,GAmDD,OAAOtB,CAAP,EAAUa,WAAV,KAA0B;AAC1Cb,MAAAA,CAAC,CAACE,cAAF;AACA,UAAIR,GAAG,GAAI,uCAAsCmB,WAAY,QAAOlB,GAAI,UAASF,KAAM,EAAvF;AACA,YAAMa,KAAK,CAACZ,GAAD,EAAM;AACfa,QAAAA,MAAM,EAAE;AADO,OAAN,CAAX;AAGA,WAAKE,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAE,KAAKC,KAAL,CAAWD,SAAX,CAAqBa,MAArB,CACRC,GAAD,IAASA,GAAG,CAACX,WAAJ,KAAoBA,WADpB;AADC,OAAd;AAKD,KA9DkB;;AAEjB,SAAKF,KAAL,GAAa;AACXc,MAAAA,IAAI,EAAE,KAAK3B,KAAL,CAAW2B,IADN;AAEXf,MAAAA,SAAS,EAAE,EAFA;AAGX;AACA;AACAgB,MAAAA,WAAW,EAAE,KAAK5B,KAAL,CAAW4B,WALb;AAMXzB,MAAAA,KAAK,EAAE;AANI,KAAb;AAQD;;AAsDD,QAAM0B,iBAAN,GAA0B;AACxB,QAAIjC,GAAG,GAAI,kCAAiC,KAAKI,KAAL,CAAWK,KAAX,CAAiBC,EAAG,mBAAkBT,GAAI,UAASF,KAAM,EAArG;AACA,QAAIY,IAAI,GAAG,MAAMC,KAAK,CAACZ,GAAD,EAAM;AAC1Ba,MAAAA,MAAM,EAAE;AADkB,KAAN,CAAtB;AAGAF,IAAAA,IAAI,GAAG,MAAMA,IAAI,CAACG,IAAL,EAAb;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACAA,IAAAA,IAAI,CAACuB,GAAL,CAAUJ,GAAD,IACP,KAAKf,QAAL,CAAc;AACZC,MAAAA,SAAS,EAAE,CACT,GAAG,KAAKC,KAAL,CAAWD,SADL,EAET;AACEE,QAAAA,IAAI,EAAEY,GAAG,CAACZ,IADZ;AAEEC,QAAAA,WAAW,EAAEW,GAAG,CAACpB,EAFnB;AAGEU,QAAAA,UAAU,EAAEU,GAAG,CAACT,UAHlB;AAIEpB,QAAAA,GAAG,EAAE6B,GAAG,CAACpB;AAJX,OAFS;AADC,KAAd,CADF;AAaD;;AAEDyB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE5B,MAAAA;AAAF,QAAY,KAAKU,KAAvB;AACA,wBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKb,KAAL,CAAW2B,IAAxB;AAA8B,MAAA,MAAM,EAAE,KAAK3B,KAAL,CAAW4B,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAc,KAAK5B,KAAL,CAAWK,KAAX,CAAiBS,IAA/B,CADF,CADF,eAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,mBAFZ;AAGE,MAAA,QAAQ,EAAE,KAAKO,YAHjB;AAIE,MAAA,KAAK,EAAElB,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAQE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,sBAFZ;AAGE,MAAA,OAAO,EAAGD,CAAD,IAAO,KAAKD,WAAL,CAAiBC,CAAjB,EAAoBC,KAApB,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,CADF,CADF,EAoBG,KAAKU,KAAL,CAAWD,SAAX,CAAqBkB,GAArB,CAA0BE,KAAD,IAAW;AACnCb,MAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AACA,0BACE,oBAAC,SAAD;AACE,QAAA,GAAG,EAAEA,KAAK,CAAC1B,EADb;AAEE,QAAA,aAAa,EAAE0B,KAFjB;AAGE,QAAA,eAAe,EAAE,KAAKR,eAHxB;AAIE,QAAA,eAAe,EAAE,KAAKN,eAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD,KAVA,CApBH,CAJF,eAoCE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,OAAO,EAAE,KAAKlB,KAAL,CAAW4B,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CApCF,CADF;AA4CD;;AArIoC;;AAuIvC,eAAe9B,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Input from \"./addcard\";\nimport CheckList from \"./checklist\";\nconst token =\n  \"52615ebb3fb8336a474fd1ab9ec8ae053f5321433e1cbfefefb33a1779816ba9\";\nconst url = \"https://api.trello.com\";\nconst key = \"23fe0646c0d1253eb430f7e02db925a0\";\n\nclass ChecklistModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: this.props.show,\n      checklist: [],\n      //cardId: this.props.cards.id,\n      // addChecklist: false,\n      removeModal: this.props.removeModal,\n      input: \"\",\n    };\n  }\n\n  handleInput = async (e, input) => {\n    e.preventDefault();\n    let url = `https://api.trello.com/1/checklists?idCard=${this.props.modal.id}&name=${input}&key=${key}&token=${token}`;\n    let data = await fetch(url, {\n      method: \"POST\",\n    });\n    data = await data.json();\n    this.setState({\n      checklist: [\n        ...this.state.checklist,\n        {\n          name: data.name,\n          checklistid: data.id,\n          checkitems: data.checkItems,\n          key: data.id,\n        },\n      ],\n    });\n  };\n\n  handleCheckitem = (e, input, checklistid) => {\n    e.preventDefault();\n    console.log(input, e, checklistid);\n    // let url = `https://api.trello.com/1/checklists/${this.props.checklistdata.checklistid}/checkItems?name=${input}&key=${key}&token=${token}`;\n    // fetch(url, {\n    //   method: \"POST\",\n    // })\n    //   .then((res) => res.json())\n    //   .then((result) => {\n    //     this.setState({\n    //       checkItems: result,\n    //     });\n    //   });\n  };\n\n  handleChange = (e) => {\n    this.setState({ input: e.target.value });\n  };\n\n  deleteChecklist = async (e, checklistid) => {\n    e.preventDefault();\n    let url = `https://api.trello.com/1/checklists/${checklistid}?key=${key}&token=${token}`;\n    await fetch(url, {\n      method: \"DELETE\",\n    });\n    this.setState({\n      checklist: this.state.checklist.filter(\n        (obj) => obj.checklistid !== checklistid\n      ),\n    });\n  };\n\n  async componentDidMount() {\n    let url = `https://api.trello.com/1/cards/${this.props.modal.id}/checklists?key=${key}&token=${token}`;\n    let data = await fetch(url, {\n      method: \"GET\",\n    });\n    data = await data.json();\n    console.log(data);\n    data.map((obj) =>\n      this.setState({\n        checklist: [\n          ...this.state.checklist,\n          {\n            name: obj.name,\n            checklistid: obj.id,\n            checkitems: obj.checkItems,\n            key: obj.id,\n          },\n        ],\n      })\n    );\n  }\n\n  render() {\n    const { input } = this.state;\n    return (\n      <Modal show={this.props.show} onHide={this.props.removeModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modal.name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div classname=\"body\">\n            <form>\n              <h5>Add checklist</h5>\n              <input\n                type=\"text\"\n                className=\"form-control mb-2\"\n                onChange={this.handleChange}\n                value={input}\n              />\n              <button\n                type=\"submit\"\n                className=\"btn btn-success mt-2\"\n                onClick={(e) => this.handleInput(e, input)}\n              >\n                Add\n              </button>\n            </form>\n          </div>\n\n          {this.state.checklist.map((items) => {\n            console.log(items);\n            return (\n              <CheckList\n                key={items.id}\n                checklistdata={items}\n                deleteChecklist={this.deleteChecklist}\n                handleCheckitem={this.handleCheckitem}\n              />\n            );\n          })}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.removeModal}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\nexport default ChecklistModal;\n"]},"metadata":{},"sourceType":"module"}