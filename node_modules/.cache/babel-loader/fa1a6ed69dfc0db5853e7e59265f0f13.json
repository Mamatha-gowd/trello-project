{"ast":null,"code":"var _jsxFileName = \"/home/mamatha/changes/src/components/Modal.js\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Addchecklist from \"./addcard\";\nimport AddCheckitem from \"./addcheckitem\";\nimport Additem from \"./additem\";\nconst token = \"52615ebb3fb8336a474fd1ab9ec8ae053f5321433e1cbfefefb33a1779816ba9\";\nconst url = \"https://api.trello.com\";\nconst key = \"23fe0646c0d1253eb430f7e02db925a0\";\n\nclass ChecklistModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAddChecklist = async (e, input) => {\n      e.preventDefault();\n      let url = `https://api.trello.com/1/checklists?idCard=${this.props.modal.id}&name=${input}&key=${key}&token=${token}`;\n      let data = await fetch(url, {\n        method: \"POST\"\n      });\n      data = await data.json();\n      this.setState({\n        checklist: [...this.state.checklist, {\n          name: data.name,\n          checklistid: data.id,\n          checkitems: data.checkItems,\n          key: data.id\n        }],\n        addChecklist: false\n      });\n    };\n\n    this.removeUpdateCheckItem = e => {\n      e.preventDefault();\n      this.setState({\n        updateCheckItem: false\n      });\n    };\n\n    this.checklistItemUpdate = (e, checkitemname) => {\n      console.log(checkitemname); // if (e.target.className === \"update\") {\n      //   return;\n      // }\n\n      this.setState({\n        updateCheckItem: true,\n        checkitemname: checkitemname\n      });\n    };\n\n    this.removeChecklistitem = e => {\n      e.preventDefault();\n      this.setState({\n        addCheckitem: false\n      });\n    };\n\n    this.showAddChecklist = () => {\n      this.setState({\n        addChecklist: true\n      });\n    };\n\n    this.cancelAddChecklist = e => {\n      console.log(e);\n      e.preventDefault();\n      this.setState({\n        addChecklist: false\n      });\n    };\n\n    this.showAddCheckitem = (name, checklistid) => {\n      this.setState({\n        addCheckitem: true,\n        checklistname: name,\n        checklistid: checklistid\n      });\n    };\n\n    this.handleAddCheckitem = (e, input, checklistid) => {\n      e.preventDefault();\n      console.log(input, e, checklistid);\n      let url = `https://api.trello.com/1/checklists/${checklistid}/checkItems?name=${input}&key=${key}&token=${token}`;\n      fetch(url, {\n        method: \"POST\"\n      }).then(res => res.json()).then(result => {\n        console.log(result);\n        this.state.checklist.forEach((obj, index, arr) => {\n          let c;\n\n          if (obj.checklistid === checklistid) {\n            c = obj.checkitems;\n            c.push(result);\n            console.log(c);\n            let newchecklist = this.state.checklist;\n            newchecklist[index] = {\n              name: result.name,\n              checklistid: result.idChecklist,\n              checkitems: c,\n              key: result.idChecklist\n            };\n            console.log(newchecklist);\n            this.setState({\n              checklist: newchecklist,\n              addCheckitem: true\n            });\n          }\n        });\n      });\n    };\n\n    this.handleDeleteCheckItem = (e, checklistid, checkitemid) => {\n      console.log(e);\n      let url = `https://api.trello.com/1/checklists/${checklistid}/checkItems/${checkitemid}?key=${key}&token=${token}`;\n      fetch(url, {\n        method: \"DELETE\"\n      });\n      this.state.checklist.forEach((obj, index, arr) => {\n        let c;\n\n        if (obj.checklistid === checklistid) {\n          c = obj.checkitems.filter(data => data.id !== checkitemid); // c.map((data)=>{if (obj.checklistid === checklistid) {\n          //   data.name = input;\n          // }})\n\n          console.log(c);\n          let newchecklist = this.state.checklist;\n          newchecklist[index] = {\n            checkitems: c,\n            checklistid: obj.checklistid,\n            key: obj.checklistid,\n            name: obj.name\n          };\n          console.log(newchecklist);\n          this.setState({\n            checklist: newchecklist\n          });\n        }\n      });\n    };\n\n    this.updateCheckitemstate = (checklistid, checkitemid, state) => {\n      let url = `https://api.trello.com/1/cards/${this.props.modal.id}/checkItem/${checkitemid}?state=${state}&key=${key}&token=${token}`;\n      fetch(url, {\n        method: \"PUT\"\n      });\n      this.state.checklist.forEach((obj, index, arr) => {\n        let c;\n\n        if (obj.checklistid === checklistid) {\n          c = obj.checkitems; //c.filter((data) => data.id === checkitemid);\n\n          c.map(data => {\n            if (obj.id === checkitemid) {\n              data.state = state;\n            }\n          });\n          console.log(c);\n          let newchecklist = this.state.checklist;\n          newchecklist[index] = {\n            checkitems: c,\n            //name: data.name,\n            checklistid: checklistid,\n            key: checklistid\n          };\n          console.log(newchecklist);\n          this.setState({\n            checklist: newchecklist\n          });\n        }\n      });\n    };\n\n    this.handleUpdateCheckitem = (e, input, checklistid, checkitemid) => {\n      e.preventDefault();\n      let url = `https://api.trello.com/1/cards/${this.props.modal.id}/checkItem/${checkitemid}?name=${input}&key=${key}&token=${token}`;\n      fetch(url, {\n        method: \"PUT\"\n      });\n      this.state.checklist.forEach((obj, index, arr) => {\n        let c;\n\n        if (obj.checklistid === checklistid) {\n          c = obj.checkitems;\n          c.map(data => {\n            if (obj.checklistid === checkitemid) {\n              data.name = input;\n            }\n          });\n          console.log(c);\n          let newchecklist = this.state.checklist;\n          newchecklist[index] = {\n            checkitems: c,\n            name: input,\n            checklistid: checklistid,\n            key: checklistid\n          };\n          console.log(newchecklist);\n          this.setState({\n            checklist: newchecklist\n          });\n        }\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        input: e.target.value\n      });\n    };\n\n    this.deleteChecklist = async (e, checklistid) => {\n      e.preventDefault();\n      let url = `https://api.trello.com/1/checklists/${checklistid}?key=${key}&token=${token}`;\n      await fetch(url, {\n        method: \"DELETE\"\n      });\n      this.setState({\n        checklist: this.state.checklist.filter(obj => obj.checklistid !== checklistid)\n      });\n    };\n\n    this.state = {\n      show: this.props.show,\n      checklist: [],\n      updateCheckItem: true,\n      addCheckitem: false,\n      addChecklist: false,\n      removeModal: this.props.removeModal\n    };\n  }\n\n  async componentDidMount() {\n    let url = `https://api.trello.com/1/cards/${this.props.modal.id}/checklists?key=${key}&token=${token}`;\n    let data = await fetch(url, {\n      method: \"GET\"\n    });\n    data = await data.json();\n    console.log(data);\n    data.map(obj => this.setState({\n      checklist: [...this.state.checklist, {\n        name: obj.name,\n        checklistid: obj.id,\n        checkitems: obj.checkItems,\n        key: obj.id\n      }]\n    }));\n  }\n\n  render() {\n    const {\n      addCheckitem,\n      addChecklist,\n      updateCheckItem\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: this.props.show,\n      onHide: this.props.removeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }\n    }, this.props.modal.name)), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }\n    }, addChecklist ? /*#__PURE__*/React.createElement(Addchecklist, {\n      onAdd: this.handleAddChecklist,\n      onDelete: this.cancelAddChecklist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-checklist\",\n      onClick: this.showAddChecklist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 15\n      }\n    }, \"Add checklist\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"checklist mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }\n    }, this.state.checklist.map(obj => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form mt-4\",\n        key: obj.checklistid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 19\n        }\n      }, obj.name), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: e => this.deleteChecklist(e, obj.checklistid),\n        className: \"btn btn-light float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 19\n        }\n      }, \"Remove\"), obj.checkitems.map(checkitem => {\n        return updateCheckItem && checkitem.name === this.state.checkitemname ? /*#__PURE__*/React.createElement(AddCheckitem, {\n          checkitemid: checkitem.id,\n          checklistid: obj.checklistid,\n          itemname: checkitem.name,\n          onAdd: this.handleUpdateCheckitem,\n          onRemove: this.removeUpdateCheckItem,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 23\n          }\n        }) : /*#__PURE__*/React.createElement(\"div\", {\n          onClick: e => this.checklistItemUpdate(e, checkitem.name),\n          className: \"checklistitems mt-3\",\n          key: checkitem.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex text-start align-items-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 25\n          }\n        }, checkitem.state === \"complete\" ? /*#__PURE__*/React.createElement(\"input\", {\n          type: \"checkbox\",\n          notupdate: \"true\",\n          className: \"update\",\n          onClick: () => this.updateCheckitemstate(obj.checklistid, checkitem.id, \"incomplete\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 29\n          }\n        }) : /*#__PURE__*/React.createElement(\"input\", {\n          type: \"checkbox\",\n          notupdate: \"true\",\n          className: \"update\",\n          onClick: () => this.updateCheckitemstate(obj.checklistid, checkitem.id, \"complete\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"checkitems\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 29\n          }\n        }, checkitem.name)), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-light delete-checkitem\",\n          onClick: e => this.handleDeleteCheckItem(e, obj.checklistid, checkitem.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 27\n          }\n        }, \"x\")));\n      }), addCheckitem ? /*#__PURE__*/React.createElement(Additem, {\n        onAdd: this.handleAddCheckitem,\n        onRemove: this.removeChecklistitem,\n        checklistid: obj.checklistid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 21\n        }\n      }) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"add-item\",\n        onClick: () => this.showAddCheckitem(obj.name, obj.checklistid),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 23\n        }\n      }, \"add item\")));\n    }))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.props.removeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 11\n      }\n    }, \"Close\")));\n  }\n\n}\n\nexport default ChecklistModal;","map":{"version":3,"sources":["/home/mamatha/changes/src/components/Modal.js"],"names":["React","Component","Modal","Button","Addchecklist","AddCheckitem","Additem","token","url","key","ChecklistModal","constructor","props","handleAddChecklist","e","input","preventDefault","modal","id","data","fetch","method","json","setState","checklist","state","name","checklistid","checkitems","checkItems","addChecklist","removeUpdateCheckItem","updateCheckItem","checklistItemUpdate","checkitemname","console","log","removeChecklistitem","addCheckitem","showAddChecklist","cancelAddChecklist","showAddCheckitem","checklistname","handleAddCheckitem","then","res","result","forEach","obj","index","arr","c","push","newchecklist","idChecklist","handleDeleteCheckItem","checkitemid","filter","updateCheckitemstate","map","handleUpdateCheckitem","handleChange","target","value","deleteChecklist","show","removeModal","componentDidMount","render","checkitem"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Addchecklist from \"./addcard\";\nimport AddCheckitem from \"./addcheckitem\";\nimport Additem from \"./additem\";\nconst token =\n  \"52615ebb3fb8336a474fd1ab9ec8ae053f5321433e1cbfefefb33a1779816ba9\";\nconst url = \"https://api.trello.com\";\nconst key = \"23fe0646c0d1253eb430f7e02db925a0\";\n\nclass ChecklistModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: this.props.show,\n      checklist: [],\n      updateCheckItem: true,\n      addCheckitem: false,\n      addChecklist: false,\n      removeModal: this.props.removeModal,\n    };\n  }\n\n  handleAddChecklist = async (e, input) => {\n    e.preventDefault();\n    let url = `https://api.trello.com/1/checklists?idCard=${this.props.modal.id}&name=${input}&key=${key}&token=${token}`;\n    let data = await fetch(url, {\n      method: \"POST\",\n    });\n    data = await data.json();\n    this.setState({\n      checklist: [\n        ...this.state.checklist,\n        {\n          name: data.name,\n          checklistid: data.id,\n          checkitems: data.checkItems,\n          key: data.id,\n        },\n      ],\n      addChecklist: false,\n    });\n  };\n\n  removeUpdateCheckItem = (e) => {\n    e.preventDefault();\n    this.setState({\n      updateCheckItem: false,\n    });\n  };\n\n  checklistItemUpdate = (e, checkitemname) => {\n    console.log(checkitemname);\n    // if (e.target.className === \"update\") {\n    //   return;\n    // }\n    this.setState({\n      updateCheckItem: true,\n      checkitemname: checkitemname,\n    });\n  };\n\n  removeChecklistitem = (e) => {\n    e.preventDefault();\n    this.setState({\n      addCheckitem: false,\n    });\n  };\n\n  showAddChecklist = () => {\n    this.setState({\n      addChecklist: true,\n    });\n  };\n\n  cancelAddChecklist = (e) => {\n    console.log(e);\n    e.preventDefault();\n    this.setState({\n      addChecklist: false,\n    });\n  };\n\n  showAddCheckitem = (name, checklistid) => {\n    this.setState({\n      addCheckitem: true,\n      checklistname: name,\n      checklistid: checklistid,\n    });\n  };\n\n  handleAddCheckitem = (e, input, checklistid) => {\n    e.preventDefault();\n    console.log(input, e, checklistid);\n    let url = `https://api.trello.com/1/checklists/${checklistid}/checkItems?name=${input}&key=${key}&token=${token}`;\n    fetch(url, {\n      method: \"POST\",\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(result);\n        this.state.checklist.forEach((obj, index, arr) => {\n          let c;\n          if (obj.checklistid === checklistid) {\n            c = obj.checkitems;\n            c.push(result);\n            console.log(c);\n            let newchecklist = this.state.checklist;\n            newchecklist[index] = {\n              name: result.name,\n              checklistid: result.idChecklist,\n              checkitems: c,\n              key: result.idChecklist,\n            };\n            console.log(newchecklist);\n            this.setState({\n              checklist: newchecklist,\n              addCheckitem: true,\n            });\n          }\n        });\n      });\n  };\n\n  handleDeleteCheckItem = (e, checklistid, checkitemid) => {\n    console.log(e);\n    let url = `https://api.trello.com/1/checklists/${checklistid}/checkItems/${checkitemid}?key=${key}&token=${token}`;\n    fetch(url, {\n      method: \"DELETE\",\n    });\n    this.state.checklist.forEach((obj, index, arr) => {\n      let c;\n      if (obj.checklistid === checklistid) {\n        c = obj.checkitems.filter((data) => data.id !== checkitemid);\n        // c.map((data)=>{if (obj.checklistid === checklistid) {\n        //   data.name = input;\n        // }})\n        console.log(c);\n        let newchecklist = this.state.checklist;\n        newchecklist[index] = {\n          checkitems: c,\n          checklistid: obj.checklistid,\n          key: obj.checklistid,\n          name: obj.name,\n        };\n        console.log(newchecklist);\n        this.setState({\n          checklist: newchecklist,\n        });\n      }\n    });\n  };\n\n  updateCheckitemstate = (checklistid, checkitemid, state) => {\n    let url = `https://api.trello.com/1/cards/${this.props.modal.id}/checkItem/${checkitemid}?state=${state}&key=${key}&token=${token}`;\n    fetch(url, {\n      method: \"PUT\",\n    });\n    this.state.checklist.forEach((obj, index, arr) => {\n      let c;\n      if (obj.checklistid === checklistid) {\n        c = obj.checkitems;\n        //c.filter((data) => data.id === checkitemid);\n        c.map((data) => {\n          if (obj.id === checkitemid) {\n            data.state = state;\n          }\n        });\n        console.log(c);\n        let newchecklist = this.state.checklist;\n        newchecklist[index] = {\n          checkitems: c,\n          //name: data.name,\n          checklistid: checklistid,\n          key: checklistid,\n        };\n        console.log(newchecklist);\n        this.setState({\n          checklist: newchecklist,\n        });\n      }\n    });\n  };\n\n  handleUpdateCheckitem = (e, input, checklistid, checkitemid) => {\n    e.preventDefault();\n    let url = `https://api.trello.com/1/cards/${this.props.modal.id}/checkItem/${checkitemid}?name=${input}&key=${key}&token=${token}`;\n    fetch(url, {\n      method: \"PUT\",\n    });\n    this.state.checklist.forEach((obj, index, arr) => {\n      let c;\n      if (obj.checklistid === checklistid) {\n        c = obj.checkitems;\n        c.map((data) => {\n          if (obj.checklistid === checkitemid) {\n            data.name = input;\n          }\n        });\n        console.log(c);\n        let newchecklist = this.state.checklist;\n        newchecklist[index] = {\n          checkitems: c,\n          name: input,\n          checklistid: checklistid,\n          key: checklistid,\n        };\n        console.log(newchecklist);\n        this.setState({\n          checklist: newchecklist,\n        });\n      }\n    });\n  };\n\n  handleChange = (e) => {\n    this.setState({ input: e.target.value });\n  };\n\n  deleteChecklist = async (e, checklistid) => {\n    e.preventDefault();\n    let url = `https://api.trello.com/1/checklists/${checklistid}?key=${key}&token=${token}`;\n    await fetch(url, {\n      method: \"DELETE\",\n    });\n    this.setState({\n      checklist: this.state.checklist.filter(\n        (obj) => obj.checklistid !== checklistid\n      ),\n    });\n  };\n\n  async componentDidMount() {\n    let url = `https://api.trello.com/1/cards/${this.props.modal.id}/checklists?key=${key}&token=${token}`;\n    let data = await fetch(url, {\n      method: \"GET\",\n    });\n    data = await data.json();\n    console.log(data);\n    data.map((obj) =>\n      this.setState({\n        checklist: [\n          ...this.state.checklist,\n          {\n            name: obj.name,\n            checklistid: obj.id,\n            checkitems: obj.checkItems,\n            key: obj.id,\n          },\n        ],\n      })\n    );\n  }\n\n  render() {\n    const { addCheckitem, addChecklist, updateCheckItem } = this.state;\n    return (\n      <Modal show={this.props.show} onHide={this.props.removeModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modal.name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {addChecklist ? (\n            <Addchecklist\n              onAdd={this.handleAddChecklist}\n              onDelete={this.cancelAddChecklist}\n            />\n          ) : (\n            <div className=\"add-checklist\" onClick={this.showAddChecklist}>\n              <button className=\"btn btn-light\">Add checklist</button>\n            </div>\n          )}\n          <div className=\"checklist mt-2\">\n            {this.state.checklist.map((obj) => {\n              return (\n                <div className=\"form mt-4\" key={obj.checklistid}>\n                  <label className=\"label\">{obj.name}</label>\n                  <button\n                    onClick={(e) => this.deleteChecklist(e, obj.checklistid)}\n                    className=\"btn btn-light float-right\"\n                  >\n                    Remove\n                  </button>\n                  {obj.checkitems.map((checkitem) => {\n                    return updateCheckItem &&\n                      checkitem.name === this.state.checkitemname ? (\n                      <AddCheckitem\n                        checkitemid={checkitem.id}\n                        checklistid={obj.checklistid}\n                        itemname={checkitem.name}\n                        onAdd={this.handleUpdateCheckitem}\n                        onRemove={this.removeUpdateCheckItem}\n                      />\n                    ) : (\n                      <div\n                        onClick={(e) =>\n                          this.checklistItemUpdate(e, checkitem.name)\n                        }\n                        className=\"checklistitems mt-3\"\n                        key={checkitem.id}\n                      >\n                        <div className=\"d-flex text-start align-items-center\">\n                          {checkitem.state === \"complete\" ? (\n                            <input\n                              type=\"checkbox\"\n                              notupdate=\"true\"\n                              className=\"update\"\n                              onClick={() =>\n                                this.updateCheckitemstate(\n                                  obj.checklistid,\n                                  checkitem.id,\n                                  \"incomplete\"\n                                )\n                              }\n                            />\n                          ) : (\n                            <input\n                              type=\"checkbox\"\n                              notupdate=\"true\"\n                              className=\"update\"\n                              onClick={() =>\n                                this.updateCheckitemstate(\n                                  obj.checklistid,\n                                  checkitem.id,\n                                  \"complete\"\n                                )\n                              }\n                            />\n                          )}\n                          <div className=\"checkitems\">\n                            <h5>{checkitem.name}</h5>\n                          </div>\n                          <button\n                            className=\"btn btn-light delete-checkitem\"\n                            onClick={(e) =>\n                              this.handleDeleteCheckItem(\n                                e,\n                                obj.checklistid,\n                                checkitem.id\n                              )\n                            }\n                          >\n                            x\n                          </button>\n                        </div>\n                      </div>\n                    );\n                  })}\n                  {addCheckitem ? (\n                    <Additem\n                      onAdd={this.handleAddCheckitem}\n                      onRemove={this.removeChecklistitem}\n                      checklistid={obj.checklistid}\n                    />\n                  ) : (\n                    <div\n                      className=\"add-item\"\n                      onClick={() =>\n                        this.showAddCheckitem(obj.name, obj.checklistid)\n                      }\n                    >\n                      <Button variant=\"light\">add item</Button>\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.removeModal}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\nexport default ChecklistModal;\n"]},"metadata":{},"sourceType":"module"}