{"ast":null,"code":"var _jsxFileName = \"/home/mamatha/react-redux/src/components/Modal.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Addchecklist from \"./addcard\";\nimport AddCheckitem from \"./addcheckitem\";\nimport AddCheckbox from \"./addcheckbox\";\nimport Additem from \"./additem\";\nimport { getChecklists, addChecklist, deleteChecklist } from \"../Actions/Modalaction\";\nconst token = \"52615ebb3fb8336a474fd1ab9ec8ae053f5321433e1cbfefefb33a1779816ba9\";\nconst key = \"23fe0646c0d1253eb430f7e02db925a0\";\n\nclass ChecklistModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAddChecklist = async (e, input) => {\n      e.preventDefault();\n      this.props.addChecklist(input, this.props.modal.id);\n    };\n\n    this.removeUpdateCheckItem = e => {\n      e.preventDefault();\n      this.setState({\n        updateCheckItem: false\n      });\n    };\n\n    this.checklistItemUpdate = (e, checkitemname) => {\n      console.log(checkitemname);\n\n      if (e.target.className === \"update\") {\n        return;\n      }\n\n      this.setState({\n        updateCheckItem: true,\n        checkitemname: checkitemname\n      });\n    };\n\n    this.removeChecklistitem = e => {\n      e.preventDefault();\n      this.setState({\n        addCheckitem: false\n      });\n    };\n\n    this.showAddChecklist = () => {\n      this.setState({\n        addChecklist: true\n      });\n    };\n\n    this.cancelAddChecklist = e => {\n      console.log(e);\n      e.preventDefault();\n      this.setState({\n        addChecklist: false\n      });\n    };\n\n    this.showAddCheckitem = (name, checklistid) => {\n      this.setState({\n        addCheckitem: true,\n        checklistname: name,\n        checklistid: checklistid\n      });\n    };\n\n    this.handleAddCheckitem = (e, input, checklistid) => {\n      e.preventDefault();\n      console.log(input, e, checklistid);\n      let url = `https://api.trello.com/1/checklists/${checklistid}/checkItems?name=${input}&key=${key}&token=${token}`;\n      fetch(url, {\n        method: \"POST\"\n      }).then(res => res.json()).then(result => {\n        console.log(result);\n        this.state.checklist.forEach((obj, index, arr) => {\n          let c;\n\n          if (obj.checklistid === checklistid) {\n            c = obj.checkitems;\n            c.push(result);\n            console.log(c);\n            let newchecklist = this.state.checklist;\n            newchecklist[index] = {\n              name: result.name,\n              checklistid: result.idChecklist,\n              checkitems: c,\n              key: result.idChecklist\n            };\n            console.log(newchecklist);\n            this.setState({\n              checklist: newchecklist,\n              addCheckitem: true\n            });\n          }\n        });\n      });\n    };\n\n    this.handleDeleteCheckItem = (e, checklistid, checkitemid) => {\n      console.log(e);\n      let url = `https://api.trello.com/1/checklists/${checklistid}/checkItems/${checkitemid}?key=${key}&token=${token}`;\n      fetch(url, {\n        method: \"DELETE\"\n      });\n      this.state.checklist.forEach((obj, index, arr) => {\n        let c;\n\n        if (obj.checklistid === checklistid) {\n          c = obj.checkitems.filter(data => data.id !== checkitemid);\n          console.log(c);\n          let newchecklist = this.state.checklist;\n          newchecklist[index] = {\n            checkitems: c,\n            checklistid: obj.checklistid,\n            key: obj.checklistid,\n            name: obj.name\n          };\n          console.log(newchecklist);\n          this.setState({\n            checklist: newchecklist\n          });\n        }\n      });\n    };\n\n    this.updateCheckitemstate = (checklistid, checkitemid, state) => {\n      let url = `https://api.trello.com/1/cards/${this.props.modal.id}/checkItem/${checkitemid}?state=${state}&key=${key}&token=${token}`;\n      fetch(url, {\n        method: \"PUT\"\n      });\n      this.state.checklist.forEach((obj, index, arr) => {\n        let c;\n\n        if (obj.checklistid === checklistid) {\n          c = obj.checkitems;\n          c.map(data => {\n            if (data.id === checkitemid) {\n              data.state = state;\n            }\n\n            return data;\n          });\n          console.log(c);\n          let newchecklist = this.state.checklist;\n          newchecklist[index] = {\n            checkitems: c,\n            name: obj.name,\n            checklistid: checklistid,\n            key: checklistid\n          };\n          console.log(newchecklist);\n          this.setState({\n            checklist: newchecklist\n          });\n        }\n      });\n    };\n\n    this.handleUpdateCheckitem = (e, input, checklistid, checkitemid) => {\n      e.preventDefault();\n      let url = `https://api.trello.com/1/cards/${this.props.modal.id}/checkItem/${checkitemid}?name=${input}&key=${key}&token=${token}`;\n      fetch(url, {\n        method: \"PUT\"\n      });\n      this.state.checklist.forEach((obj, index, arr) => {\n        let c;\n\n        if (obj.checklistid === checklistid) {\n          c = obj.checkitems;\n          c.map(data => {\n            if (obj.checklistid === checkitemid) {\n              data.name = input;\n            }\n\n            return data;\n          });\n          console.log(c);\n          let newchecklist = this.state.checklist;\n          newchecklist[index] = {\n            checkitems: c,\n            name: input,\n            checklistid: checklistid,\n            key: checklistid\n          };\n          console.log(newchecklist);\n          this.setState({\n            checklist: newchecklist\n          });\n        }\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        input: e.target.value\n      });\n    };\n\n    this.deleteChecklist = async (e, checklistid) => {\n      e.preventDefault();\n      let url = `https://api.trello.com/1/checklists/${checklistid}?key=${key}&token=${token}`;\n      await fetch(url, {\n        method: \"DELETE\"\n      });\n      this.setState({\n        checklist: this.state.checklist.filter(obj => obj.checklistid !== checklistid)\n      });\n    };\n\n    this.state = {\n      show: this.props.show,\n      updateCheckItem: true,\n      addCheckitem: false,\n      addChecklist: false,\n      removeModal: this.props.removeModal\n    };\n  }\n\n  async componentDidMount() {\n    this.props.getChecklists(this.props.modal.id);\n  }\n\n  render() {\n    console.log(this.props.modal.id);\n    const {\n      addCheckitem,\n      addChecklist,\n      updateCheckItem\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: this.props.show,\n      onHide: this.props.removeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }\n    }, this.props.modal.name)), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }\n    }, addChecklist ? /*#__PURE__*/React.createElement(Addchecklist, {\n      onAdd: this.handleAddChecklist,\n      onDelete: this.cancelAddChecklist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-checklist\",\n      onClick: this.showAddChecklist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 15\n      }\n    }, \"Add checklist\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"checklist mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }\n    }, this.props.checklists.map(obj => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form mt-4\",\n        key: obj.checklistid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 19\n        }\n      }, obj.name), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: e => this.deleteChecklist(e, obj.checklistid),\n        className: \"btn btn-light float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 19\n        }\n      }, \"Remove\"), obj.checkitems.map(checkitem => {\n        return updateCheckItem && checkitem.name === this.state.checkitemname ? /*#__PURE__*/React.createElement(AddCheckitem, {\n          checkitemid: checkitem.id,\n          checklistid: obj.checklistid,\n          itemname: checkitem.name,\n          onAdd: this.handleUpdateCheckitem,\n          onRemove: this.removeUpdateCheckItem,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 23\n          }\n        }) : /*#__PURE__*/React.createElement(\"div\", {\n          onClick: e => this.checklistItemUpdate(e, checkitem.name),\n          className: \"checklistitems mt-3 update\",\n          key: checkitem.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(AddCheckbox, {\n          key: obj.checklistid,\n          checklistid: obj.checklistid,\n          checkitemid: checkitem.id,\n          updateState: this.updateCheckitemstate,\n          name: checkitem.name,\n          deleteCheckitem: this.handleDeleteCheckItem,\n          state: checkitem.state,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }\n        }));\n      }), addCheckitem && obj.name === this.state.checklistname ? /*#__PURE__*/React.createElement(Additem, {\n        onAdd: this.handleAddCheckitem,\n        onRemove: this.removeChecklistitem,\n        checklistid: obj.checklistid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }\n      }) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"add-item\",\n        onClick: () => this.showAddCheckitem(obj.name, obj.checklistid),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 23\n        }\n      }, \"add item\")));\n    }))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.props.removeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }\n    }, \"Close\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  checklists: state.Modalreducer.checklists\n});\n\nexport default connect(mapStateToProps, {\n  getChecklists,\n  addChecklist,\n  deleteChecklist\n})(ChecklistModal);","map":{"version":3,"sources":["/home/mamatha/react-redux/src/components/Modal.js"],"names":["React","Component","connect","Modal","Button","Addchecklist","AddCheckitem","AddCheckbox","Additem","getChecklists","addChecklist","deleteChecklist","token","key","ChecklistModal","constructor","props","handleAddChecklist","e","input","preventDefault","modal","id","removeUpdateCheckItem","setState","updateCheckItem","checklistItemUpdate","checkitemname","console","log","target","className","removeChecklistitem","addCheckitem","showAddChecklist","cancelAddChecklist","showAddCheckitem","name","checklistid","checklistname","handleAddCheckitem","url","fetch","method","then","res","json","result","state","checklist","forEach","obj","index","arr","c","checkitems","push","newchecklist","idChecklist","handleDeleteCheckItem","checkitemid","filter","data","updateCheckitemstate","map","handleUpdateCheckitem","handleChange","value","show","removeModal","componentDidMount","render","checklists","checkitem","mapStateToProps","Modalreducer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Addchecklist from \"./addcard\";\nimport AddCheckitem from \"./addcheckitem\";\nimport AddCheckbox from \"./addcheckbox\";\nimport Additem from \"./additem\";\n\nimport {\n  getChecklists,\n  addChecklist,\n  deleteChecklist,\n} from \"../Actions/Modalaction\";\nconst token =\n  \"52615ebb3fb8336a474fd1ab9ec8ae053f5321433e1cbfefefb33a1779816ba9\";\nconst key = \"23fe0646c0d1253eb430f7e02db925a0\";\n\nclass ChecklistModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: this.props.show,\n      updateCheckItem: true,\n      addCheckitem: false,\n      addChecklist: false,\n      removeModal: this.props.removeModal,\n    };\n  }\n\n  handleAddChecklist = async (e, input) => {\n    e.preventDefault();\n    this.props.addChecklist(input, this.props.modal.id);\n  };\n\n  removeUpdateCheckItem = (e) => {\n    e.preventDefault();\n    this.setState({\n      updateCheckItem: false,\n    });\n  };\n\n  checklistItemUpdate = (e, checkitemname) => {\n    console.log(checkitemname);\n    if (e.target.className === \"update\") {\n      return;\n    }\n    this.setState({\n      updateCheckItem: true,\n      checkitemname: checkitemname,\n    });\n  };\n\n  removeChecklistitem = (e) => {\n    e.preventDefault();\n    this.setState({\n      addCheckitem: false,\n    });\n  };\n\n  showAddChecklist = () => {\n    this.setState({\n      addChecklist: true,\n    });\n  };\n\n  cancelAddChecklist = (e) => {\n    console.log(e);\n    e.preventDefault();\n    this.setState({\n      addChecklist: false,\n    });\n  };\n\n  showAddCheckitem = (name, checklistid) => {\n    this.setState({\n      addCheckitem: true,\n      checklistname: name,\n      checklistid: checklistid,\n    });\n  };\n\n  handleAddCheckitem = (e, input, checklistid) => {\n    e.preventDefault();\n    console.log(input, e, checklistid);\n    let url = `https://api.trello.com/1/checklists/${checklistid}/checkItems?name=${input}&key=${key}&token=${token}`;\n    fetch(url, {\n      method: \"POST\",\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(result);\n        this.state.checklist.forEach((obj, index, arr) => {\n          let c;\n          if (obj.checklistid === checklistid) {\n            c = obj.checkitems;\n            c.push(result);\n            console.log(c);\n            let newchecklist = this.state.checklist;\n            newchecklist[index] = {\n              name: result.name,\n              checklistid: result.idChecklist,\n              checkitems: c,\n              key: result.idChecklist,\n            };\n            console.log(newchecklist);\n            this.setState({\n              checklist: newchecklist,\n              addCheckitem: true,\n            });\n          }\n        });\n      });\n  };\n\n  handleDeleteCheckItem = (e, checklistid, checkitemid) => {\n    console.log(e);\n    let url = `https://api.trello.com/1/checklists/${checklistid}/checkItems/${checkitemid}?key=${key}&token=${token}`;\n    fetch(url, {\n      method: \"DELETE\",\n    });\n    this.state.checklist.forEach((obj, index, arr) => {\n      let c;\n      if (obj.checklistid === checklistid) {\n        c = obj.checkitems.filter((data) => data.id !== checkitemid);\n        console.log(c);\n        let newchecklist = this.state.checklist;\n        newchecklist[index] = {\n          checkitems: c,\n          checklistid: obj.checklistid,\n          key: obj.checklistid,\n          name: obj.name,\n        };\n        console.log(newchecklist);\n        this.setState({\n          checklist: newchecklist,\n        });\n      }\n    });\n  };\n\n  updateCheckitemstate = (checklistid, checkitemid, state) => {\n    let url = `https://api.trello.com/1/cards/${this.props.modal.id}/checkItem/${checkitemid}?state=${state}&key=${key}&token=${token}`;\n    fetch(url, {\n      method: \"PUT\",\n    });\n    this.state.checklist.forEach((obj, index, arr) => {\n      let c;\n      if (obj.checklistid === checklistid) {\n        c = obj.checkitems;\n        c.map((data) => {\n          if (data.id === checkitemid) {\n            data.state = state;\n          }\n          return data;\n        });\n        console.log(c);\n        let newchecklist = this.state.checklist;\n        newchecklist[index] = {\n          checkitems: c,\n          name: obj.name,\n          checklistid: checklistid,\n          key: checklistid,\n        };\n        console.log(newchecklist);\n        this.setState({\n          checklist: newchecklist,\n        });\n      }\n    });\n  };\n\n  handleUpdateCheckitem = (e, input, checklistid, checkitemid) => {\n    e.preventDefault();\n    let url = `https://api.trello.com/1/cards/${this.props.modal.id}/checkItem/${checkitemid}?name=${input}&key=${key}&token=${token}`;\n    fetch(url, {\n      method: \"PUT\",\n    });\n    this.state.checklist.forEach((obj, index, arr) => {\n      let c;\n      if (obj.checklistid === checklistid) {\n        c = obj.checkitems;\n        c.map((data) => {\n          if (obj.checklistid === checkitemid) {\n            data.name = input;\n          }\n          return data;\n        });\n        console.log(c);\n        let newchecklist = this.state.checklist;\n        newchecklist[index] = {\n          checkitems: c,\n          name: input,\n          checklistid: checklistid,\n          key: checklistid,\n        };\n        console.log(newchecklist);\n        this.setState({\n          checklist: newchecklist,\n        });\n      }\n    });\n  };\n\n  handleChange = (e) => {\n    this.setState({ input: e.target.value });\n  };\n\n  deleteChecklist = async (e, checklistid) => {\n    e.preventDefault();\n    let url = `https://api.trello.com/1/checklists/${checklistid}?key=${key}&token=${token}`;\n    await fetch(url, {\n      method: \"DELETE\",\n    });\n    this.setState({\n      checklist: this.state.checklist.filter(\n        (obj) => obj.checklistid !== checklistid\n      ),\n    });\n  };\n\n  async componentDidMount() {\n    this.props.getChecklists(this.props.modal.id);\n  }\n\n  render() {\n    console.log(this.props.modal.id);\n    const { addCheckitem, addChecklist, updateCheckItem } = this.state;\n    return (\n      <Modal show={this.props.show} onHide={this.props.removeModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modal.name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {addChecklist ? (\n            <Addchecklist\n              onAdd={this.handleAddChecklist}\n              onDelete={this.cancelAddChecklist}\n            />\n          ) : (\n            <div className=\"add-checklist\" onClick={this.showAddChecklist}>\n              <button className=\"btn btn-light\">Add checklist</button>\n            </div>\n          )}\n          <div className=\"checklist mt-2\">\n            {this.props.checklists.map((obj) => {\n              return (\n                <div className=\"form mt-4\" key={obj.checklistid}>\n                  <label className=\"label\">{obj.name}</label>\n                  <button\n                    onClick={(e) => this.deleteChecklist(e, obj.checklistid)}\n                    className=\"btn btn-light float-right\"\n                  >\n                    Remove\n                  </button>\n                  {obj.checkitems.map((checkitem) => {\n                    return updateCheckItem &&\n                      checkitem.name === this.state.checkitemname ? (\n                      <AddCheckitem\n                        checkitemid={checkitem.id}\n                        checklistid={obj.checklistid}\n                        itemname={checkitem.name}\n                        onAdd={this.handleUpdateCheckitem}\n                        onRemove={this.removeUpdateCheckItem}\n                      />\n                    ) : (\n                      <div\n                        onClick={(e) =>\n                          this.checklistItemUpdate(e, checkitem.name)\n                        }\n                        className=\"checklistitems mt-3 update\"\n                        key={checkitem.id}\n                      >\n                        <AddCheckbox\n                          key={obj.checklistid}\n                          checklistid={obj.checklistid}\n                          checkitemid={checkitem.id}\n                          updateState={this.updateCheckitemstate}\n                          name={checkitem.name}\n                          deleteCheckitem={this.handleDeleteCheckItem}\n                          state={checkitem.state}\n                        />\n                      </div>\n                    );\n                  })}\n                  {addCheckitem && obj.name === this.state.checklistname ? (\n                    <Additem\n                      onAdd={this.handleAddCheckitem}\n                      onRemove={this.removeChecklistitem}\n                      checklistid={obj.checklistid}\n                    />\n                  ) : (\n                    <div\n                      className=\"add-item\"\n                      onClick={() =>\n                        this.showAddCheckitem(obj.name, obj.checklistid)\n                      }\n                    >\n                      <Button variant=\"light\">add item</Button>\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.removeModal}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  checklists: state.Modalreducer.checklists,\n});\nexport default connect(mapStateToProps, {\n  getChecklists,\n  addChecklist,\n  deleteChecklist,\n})(ChecklistModal);\n"]},"metadata":{},"sourceType":"module"}