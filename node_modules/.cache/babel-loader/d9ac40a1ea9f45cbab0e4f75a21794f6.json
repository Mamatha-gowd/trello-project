{"ast":null,"code":"var _jsxFileName = \"/home/mamatha/changes/src/components/Modal.js\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Addchecklist from \"./addcard\";\nimport CheckList from \"./checklist\";\nconst token = \"52615ebb3fb8336a474fd1ab9ec8ae053f5321433e1cbfefefb33a1779816ba9\";\nconst url = \"https://api.trello.com\";\nconst key = \"23fe0646c0d1253eb430f7e02db925a0\";\n\nclass ChecklistModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAddChecklist = async (e, input) => {\n      e.preventDefault();\n      let url = `https://api.trello.com/1/checklists?idCard=${this.props.modal.id}&name=${input}&key=${key}&token=${token}`;\n      let data = await fetch(url, {\n        method: \"POST\"\n      });\n      data = await data.json();\n      this.setState({\n        checklist: [...this.state.checklist, {\n          name: data.name,\n          checklistid: data.id,\n          checkitems: data.checkItems,\n          key: data.id\n        }],\n        addChecklist: false\n      });\n    };\n\n    this.removeUpdateCheckItem = () => {\n      this.setState({\n        updateCheckItem: false\n      });\n    };\n\n    this.checklistItemUpdate = (e, checkitemname) => {\n      if (e.target.className === \"update\") {\n        return;\n      }\n\n      this.setState({\n        updateCheckItem: false,\n        checkitemname: checkitemname\n      });\n    };\n\n    this.removeChecklistitem = () => {\n      this.setState({\n        addCheckitem: true\n      });\n    };\n\n    this.showAddChecklist = () => {\n      this.setState({\n        addChecklist: true\n      });\n    };\n\n    this.showAddCheckitem = (name, checklistid) => {\n      this.setState({\n        addCheckitem: true,\n        checklistname: name,\n        checklistid: checklistid\n      });\n    };\n\n    this.handleCheckitem = (e, input, checklistid) => {\n      e.preventDefault();\n      console.log(input, e, checklistid);\n      let url = `https://api.trello.com/1/checklists/${checklistid}/checkItems?name=${input}&key=${key}&token=${token}`;\n      fetch(url, {\n        method: \"POST\"\n      }).then(res => res.json()).then(result => {\n        console.log(result);\n        this.state.checklist.forEach((obj, index, arr) => {\n          let c;\n\n          if (obj.checklistid === checklistid) {\n            c = obj.checkitems;\n            c.push(result); // c.filter((data)=>data.id === checkitemid)\n            // c.map((data)=>{if (obj.checklistid === checklistid) {\n            //   data.name = input;\n            // }})\n\n            console.log(c);\n            let newchecklist = this.state.checklist;\n            newchecklist[index] = {\n              name: result.name,\n              checklistid: result.idChecklist,\n              checkitems: c,\n              key: result.idChecklist\n            };\n            console.log(newchecklist);\n            this.setState({\n              checklist: newchecklist,\n              addCheckitem: true\n            });\n          }\n        });\n      });\n    };\n\n    this.handleDeleteCheckItem = (checklistid, checkitemid) => {\n      let url = `https://api.trello.com/1/checklists/${checklistid}/checkItems/${checkitemid}?key=${key}&token=${token}`;\n      fetch(url, {\n        method: \"DELETE\"\n      });\n      this.state.checklist.forEach((obj, index, arr) => {\n        let c;\n\n        if (obj.checklistid === checklistid) {\n          c = obj.checkitems;\n          c.filter(data => data.id === checkitemid); // c.map((data)=>{if (obj.checklistid === checklistid) {\n          //   data.name = input;\n          // }})\n\n          console.log(c);\n          let newchecklist = this.state.checklist;\n          newchecklist[index] = {\n            checkitems: c\n          };\n          console.log(newchecklist);\n          this.setState({\n            checklist: newchecklist\n          });\n        }\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        input: e.target.value\n      });\n    };\n\n    this.deleteChecklist = async (e, checklistid) => {\n      e.preventDefault();\n      let url = `https://api.trello.com/1/checklists/${checklistid}?key=${key}&token=${token}`;\n      await fetch(url, {\n        method: \"DELETE\"\n      });\n      this.setState({\n        checklist: this.state.checklist.filter(obj => obj.checklistid !== checklistid)\n      });\n    };\n\n    this.state = {\n      show: this.props.show,\n      checklist: [],\n      updateCheckItem: true,\n      addCheckitem: false,\n      addChecklist: false,\n      removeModal: this.props.removeModal\n    };\n  }\n\n  async componentDidMount() {\n    let url = `https://api.trello.com/1/cards/${this.props.modal.id}/checklists?key=${key}&token=${token}`;\n    let data = await fetch(url, {\n      method: \"GET\"\n    });\n    data = await data.json();\n    console.log(data);\n    data.map(obj => this.setState({\n      checklist: [...this.state.checklist, {\n        name: obj.name,\n        checklistid: obj.id,\n        checkitems: obj.checkItems,\n        key: obj.id\n      }]\n    }));\n  }\n\n  render() {\n    const {\n      addCheckitem,\n      addChecklist,\n      updateCheckItem\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: this.props.show,\n      onHide: this.props.removeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }\n    }, this.props.modal.name)), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }\n    }, addChecklist ? /*#__PURE__*/React.createElement(Addchecklist, {\n      onAdd: this.handleAddChecklist,\n      onDelete: this.showAddChecklist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-checklist\",\n      onClick: this.showAddChecklist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 15\n      }\n    }, \"Add checklist\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"checklist mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }, this.state.checklist.map(obj => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form\",\n        key: obj.checklistid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 19\n        }\n      }, obj.name), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: e => this.deleteChecklist(e, obj.checklistid),\n        className: \"btn btn-light float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 19\n        }\n      }, \"Remove\"));\n    }))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.props.removeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }, \"Close\")));\n  }\n\n}\n\nexport default ChecklistModal;","map":{"version":3,"sources":["/home/mamatha/changes/src/components/Modal.js"],"names":["React","Component","Modal","Button","Addchecklist","CheckList","token","url","key","ChecklistModal","constructor","props","handleAddChecklist","e","input","preventDefault","modal","id","data","fetch","method","json","setState","checklist","state","name","checklistid","checkitems","checkItems","addChecklist","removeUpdateCheckItem","updateCheckItem","checklistItemUpdate","checkitemname","target","className","removeChecklistitem","addCheckitem","showAddChecklist","showAddCheckitem","checklistname","handleCheckitem","console","log","then","res","result","forEach","obj","index","arr","c","push","newchecklist","idChecklist","handleDeleteCheckItem","checkitemid","filter","handleChange","value","deleteChecklist","show","removeModal","componentDidMount","map","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kCAAP;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;AACA,OAAOC,YAAP,MAAyB,WAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,MAAMC,KAAK,GACT,kEADF;AAEA,MAAMC,GAAG,GAAG,wBAAZ;AACA,MAAMC,GAAG,GAAG,kCAAZ;;AAEA,MAAMC,cAAN,SAA6BR,SAA7B,CAAuC;AACrCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,kBAZmB,GAYE,OAAOC,CAAP,EAAUC,KAAV,KAAoB;AACvCD,MAAAA,CAAC,CAACE,cAAF;AACA,UAAIR,GAAG,GAAI,8CAA6C,KAAKI,KAAL,CAAWK,KAAX,CAAiBC,EAAG,SAAQH,KAAM,QAAON,GAAI,UAASF,KAAM,EAApH;AACA,UAAIY,IAAI,GAAG,MAAMC,KAAK,CAACZ,GAAD,EAAM;AAC1Ba,QAAAA,MAAM,EAAE;AADkB,OAAN,CAAtB;AAGAF,MAAAA,IAAI,GAAG,MAAMA,IAAI,CAACG,IAAL,EAAb;AACA,WAAKC,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAE,CACT,GAAG,KAAKC,KAAL,CAAWD,SADL,EAET;AACEE,UAAAA,IAAI,EAAEP,IAAI,CAACO,IADb;AAEEC,UAAAA,WAAW,EAAER,IAAI,CAACD,EAFpB;AAGEU,UAAAA,UAAU,EAAET,IAAI,CAACU,UAHnB;AAIEpB,UAAAA,GAAG,EAAEU,IAAI,CAACD;AAJZ,SAFS,CADC;AAUZY,QAAAA,YAAY,EAAE;AAVF,OAAd;AAYD,KA/BkB;;AAAA,SAiCnBC,qBAjCmB,GAiCK,MAAM;AAC5B,WAAKR,QAAL,CAAc;AACZS,QAAAA,eAAe,EAAE;AADL,OAAd;AAGD,KArCkB;;AAAA,SAuCnBC,mBAvCmB,GAuCG,CAACnB,CAAD,EAAIoB,aAAJ,KAAsB;AAC1C,UAAIpB,CAAC,CAACqB,MAAF,CAASC,SAAT,KAAuB,QAA3B,EAAqC;AACnC;AACD;;AACD,WAAKb,QAAL,CAAc;AACZS,QAAAA,eAAe,EAAE,KADL;AAEZE,QAAAA,aAAa,EAAEA;AAFH,OAAd;AAID,KA/CkB;;AAAA,SAiDnBG,mBAjDmB,GAiDG,MAAM;AAC1B,WAAKd,QAAL,CAAc;AACZe,QAAAA,YAAY,EAAE;AADF,OAAd;AAGD,KArDkB;;AAAA,SAuDnBC,gBAvDmB,GAuDA,MAAM;AACvB,WAAKhB,QAAL,CAAc;AACZO,QAAAA,YAAY,EAAE;AADF,OAAd;AAGD,KA3DkB;;AAAA,SA6DnBU,gBA7DmB,GA6DA,CAACd,IAAD,EAAOC,WAAP,KAAuB;AACxC,WAAKJ,QAAL,CAAc;AACZe,QAAAA,YAAY,EAAE,IADF;AAEZG,QAAAA,aAAa,EAAEf,IAFH;AAGZC,QAAAA,WAAW,EAAEA;AAHD,OAAd;AAKD,KAnEkB;;AAAA,SAqEnBe,eArEmB,GAqED,CAAC5B,CAAD,EAAIC,KAAJ,EAAWY,WAAX,KAA2B;AAC3Cb,MAAAA,CAAC,CAACE,cAAF;AACA2B,MAAAA,OAAO,CAACC,GAAR,CAAY7B,KAAZ,EAAmBD,CAAnB,EAAsBa,WAAtB;AACA,UAAInB,GAAG,GAAI,uCAAsCmB,WAAY,oBAAmBZ,KAAM,QAAON,GAAI,UAASF,KAAM,EAAhH;AACAa,MAAAA,KAAK,CAACZ,GAAD,EAAM;AACTa,QAAAA,MAAM,EAAE;AADC,OAAN,CAAL,CAGGwB,IAHH,CAGSC,GAAD,IAASA,GAAG,CAACxB,IAAJ,EAHjB,EAIGuB,IAJH,CAISE,MAAD,IAAY;AAChBJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACA,aAAKtB,KAAL,CAAWD,SAAX,CAAqBwB,OAArB,CAA6B,CAACC,GAAD,EAAMC,KAAN,EAAaC,GAAb,KAAqB;AAChD,cAAIC,CAAJ;;AACA,cAAIH,GAAG,CAACtB,WAAJ,KAAoBA,WAAxB,EAAqC;AACnCyB,YAAAA,CAAC,GAAGH,GAAG,CAACrB,UAAR;AACAwB,YAAAA,CAAC,CAACC,IAAF,CAAON,MAAP,EAFmC,CAGnC;AACA;AACA;AACA;;AACAJ,YAAAA,OAAO,CAACC,GAAR,CAAYQ,CAAZ;AACA,gBAAIE,YAAY,GAAG,KAAK7B,KAAL,CAAWD,SAA9B;AACA8B,YAAAA,YAAY,CAACJ,KAAD,CAAZ,GAAsB;AACpBxB,cAAAA,IAAI,EAAEqB,MAAM,CAACrB,IADO;AAEpBC,cAAAA,WAAW,EAAEoB,MAAM,CAACQ,WAFA;AAGpB3B,cAAAA,UAAU,EAAEwB,CAHQ;AAIpB3C,cAAAA,GAAG,EAAEsC,MAAM,CAACQ;AAJQ,aAAtB;AAMAZ,YAAAA,OAAO,CAACC,GAAR,CAAYU,YAAZ;AACA,iBAAK/B,QAAL,CAAc;AACZC,cAAAA,SAAS,EAAE8B,YADC;AAEZhB,cAAAA,YAAY,EAAE;AAFF,aAAd;AAID;AACF,SAvBD;AAwBD,OA9BH;AA+BD,KAxGkB;;AAAA,SA0GnBkB,qBA1GmB,GA0GK,CAAC7B,WAAD,EAAc8B,WAAd,KAA8B;AACpD,UAAIjD,GAAG,GAAI,uCAAsCmB,WAAY,eAAc8B,WAAY,QAAOhD,GAAI,UAASF,KAAM,EAAjH;AACAa,MAAAA,KAAK,CAACZ,GAAD,EAAM;AACTa,QAAAA,MAAM,EAAE;AADC,OAAN,CAAL;AAGA,WAAKI,KAAL,CAAWD,SAAX,CAAqBwB,OAArB,CAA6B,CAACC,GAAD,EAAMC,KAAN,EAAaC,GAAb,KAAqB;AAChD,YAAIC,CAAJ;;AACA,YAAIH,GAAG,CAACtB,WAAJ,KAAoBA,WAAxB,EAAqC;AACnCyB,UAAAA,CAAC,GAAGH,GAAG,CAACrB,UAAR;AACAwB,UAAAA,CAAC,CAACM,MAAF,CAAUvC,IAAD,IAAUA,IAAI,CAACD,EAAL,KAAYuC,WAA/B,EAFmC,CAGnC;AACA;AACA;;AACAd,UAAAA,OAAO,CAACC,GAAR,CAAYQ,CAAZ;AACA,cAAIE,YAAY,GAAG,KAAK7B,KAAL,CAAWD,SAA9B;AACA8B,UAAAA,YAAY,CAACJ,KAAD,CAAZ,GAAsB;AACpBtB,YAAAA,UAAU,EAAEwB;AADQ,WAAtB;AAGAT,UAAAA,OAAO,CAACC,GAAR,CAAYU,YAAZ;AACA,eAAK/B,QAAL,CAAc;AACZC,YAAAA,SAAS,EAAE8B;AADC,WAAd;AAGD;AACF,OAlBD;AAmBD,KAlIkB;;AAAA,SAoInBK,YApImB,GAoIH7C,CAAD,IAAO;AACpB,WAAKS,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAED,CAAC,CAACqB,MAAF,CAASyB;AAAlB,OAAd;AACD,KAtIkB;;AAAA,SAwInBC,eAxImB,GAwID,OAAO/C,CAAP,EAAUa,WAAV,KAA0B;AAC1Cb,MAAAA,CAAC,CAACE,cAAF;AACA,UAAIR,GAAG,GAAI,uCAAsCmB,WAAY,QAAOlB,GAAI,UAASF,KAAM,EAAvF;AACA,YAAMa,KAAK,CAACZ,GAAD,EAAM;AACfa,QAAAA,MAAM,EAAE;AADO,OAAN,CAAX;AAGA,WAAKE,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAE,KAAKC,KAAL,CAAWD,SAAX,CAAqBkC,MAArB,CACRT,GAAD,IAASA,GAAG,CAACtB,WAAJ,KAAoBA,WADpB;AADC,OAAd;AAKD,KAnJkB;;AAEjB,SAAKF,KAAL,GAAa;AACXqC,MAAAA,IAAI,EAAE,KAAKlD,KAAL,CAAWkD,IADN;AAEXtC,MAAAA,SAAS,EAAE,EAFA;AAGXQ,MAAAA,eAAe,EAAE,IAHN;AAIXM,MAAAA,YAAY,EAAE,KAJH;AAKXR,MAAAA,YAAY,EAAE,KALH;AAMXiC,MAAAA,WAAW,EAAE,KAAKnD,KAAL,CAAWmD;AANb,KAAb;AAQD;;AA2ID,QAAMC,iBAAN,GAA0B;AACxB,QAAIxD,GAAG,GAAI,kCAAiC,KAAKI,KAAL,CAAWK,KAAX,CAAiBC,EAAG,mBAAkBT,GAAI,UAASF,KAAM,EAArG;AACA,QAAIY,IAAI,GAAG,MAAMC,KAAK,CAACZ,GAAD,EAAM;AAC1Ba,MAAAA,MAAM,EAAE;AADkB,KAAN,CAAtB;AAGAF,IAAAA,IAAI,GAAG,MAAMA,IAAI,CAACG,IAAL,EAAb;AACAqB,IAAAA,OAAO,CAACC,GAAR,CAAYzB,IAAZ;AACAA,IAAAA,IAAI,CAAC8C,GAAL,CAAUhB,GAAD,IACP,KAAK1B,QAAL,CAAc;AACZC,MAAAA,SAAS,EAAE,CACT,GAAG,KAAKC,KAAL,CAAWD,SADL,EAET;AACEE,QAAAA,IAAI,EAAEuB,GAAG,CAACvB,IADZ;AAEEC,QAAAA,WAAW,EAAEsB,GAAG,CAAC/B,EAFnB;AAGEU,QAAAA,UAAU,EAAEqB,GAAG,CAACpB,UAHlB;AAIEpB,QAAAA,GAAG,EAAEwC,GAAG,CAAC/B;AAJX,OAFS;AADC,KAAd,CADF;AAaD;;AAEDgD,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE5B,MAAAA,YAAF;AAAgBR,MAAAA,YAAhB;AAA8BE,MAAAA;AAA9B,QAAkD,KAAKP,KAA7D;AACA,wBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKb,KAAL,CAAWkD,IAAxB;AAA8B,MAAA,MAAM,EAAE,KAAKlD,KAAL,CAAWmD,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAc,KAAKnD,KAAL,CAAWK,KAAX,CAAiBS,IAA/B,CADF,CADF,eAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGI,YAAY,gBACX,oBAAC,YAAD;AACE,MAAA,KAAK,EAAE,KAAKjB,kBADd;AAEE,MAAA,QAAQ,EAAE,KAAK0B,gBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW,gBAMX;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,OAAO,EAAE,KAAKA,gBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAPJ,eAWE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKd,KAAL,CAAWD,SAAX,CAAqByC,GAArB,CAA0BhB,GAAD,IAAS;AACjC,0BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEA,GAAG,CAACtB,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BsB,GAAG,CAACvB,IAA9B,CADF,eAEE;AACE,QAAA,OAAO,EAAGZ,CAAD,IAAO,KAAK+C,eAAL,CAAqB/C,CAArB,EAAwBmC,GAAG,CAACtB,WAA5B,CADlB;AAEE,QAAA,SAAS,EAAC,2BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CADF;AAWD,KAZA,CADH,CAXF,CAJF,eA+BE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,OAAO,EAAE,KAAKf,KAAL,CAAWmD,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CA/BF,CADF;AAuCD;;AArNoC;;AAuNvC,eAAerD,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Addchecklist from \"./addcard\";\nimport CheckList from \"./checklist\";\nconst token =\n  \"52615ebb3fb8336a474fd1ab9ec8ae053f5321433e1cbfefefb33a1779816ba9\";\nconst url = \"https://api.trello.com\";\nconst key = \"23fe0646c0d1253eb430f7e02db925a0\";\n\nclass ChecklistModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: this.props.show,\n      checklist: [],\n      updateCheckItem: true,\n      addCheckitem: false,\n      addChecklist: false,\n      removeModal: this.props.removeModal,\n    };\n  }\n\n  handleAddChecklist = async (e, input) => {\n    e.preventDefault();\n    let url = `https://api.trello.com/1/checklists?idCard=${this.props.modal.id}&name=${input}&key=${key}&token=${token}`;\n    let data = await fetch(url, {\n      method: \"POST\",\n    });\n    data = await data.json();\n    this.setState({\n      checklist: [\n        ...this.state.checklist,\n        {\n          name: data.name,\n          checklistid: data.id,\n          checkitems: data.checkItems,\n          key: data.id,\n        },\n      ],\n      addChecklist: false,\n    });\n  };\n\n  removeUpdateCheckItem = () => {\n    this.setState({\n      updateCheckItem: false,\n    });\n  };\n\n  checklistItemUpdate = (e, checkitemname) => {\n    if (e.target.className === \"update\") {\n      return;\n    }\n    this.setState({\n      updateCheckItem: false,\n      checkitemname: checkitemname,\n    });\n  };\n\n  removeChecklistitem = () => {\n    this.setState({\n      addCheckitem: true,\n    });\n  };\n\n  showAddChecklist = () => {\n    this.setState({\n      addChecklist: true,\n    });\n  };\n\n  showAddCheckitem = (name, checklistid) => {\n    this.setState({\n      addCheckitem: true,\n      checklistname: name,\n      checklistid: checklistid,\n    });\n  };\n\n  handleCheckitem = (e, input, checklistid) => {\n    e.preventDefault();\n    console.log(input, e, checklistid);\n    let url = `https://api.trello.com/1/checklists/${checklistid}/checkItems?name=${input}&key=${key}&token=${token}`;\n    fetch(url, {\n      method: \"POST\",\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(result);\n        this.state.checklist.forEach((obj, index, arr) => {\n          let c;\n          if (obj.checklistid === checklistid) {\n            c = obj.checkitems;\n            c.push(result);\n            // c.filter((data)=>data.id === checkitemid)\n            // c.map((data)=>{if (obj.checklistid === checklistid) {\n            //   data.name = input;\n            // }})\n            console.log(c);\n            let newchecklist = this.state.checklist;\n            newchecklist[index] = {\n              name: result.name,\n              checklistid: result.idChecklist,\n              checkitems: c,\n              key: result.idChecklist,\n            };\n            console.log(newchecklist);\n            this.setState({\n              checklist: newchecklist,\n              addCheckitem: true,\n            });\n          }\n        });\n      });\n  };\n\n  handleDeleteCheckItem = (checklistid, checkitemid) => {\n    let url = `https://api.trello.com/1/checklists/${checklistid}/checkItems/${checkitemid}?key=${key}&token=${token}`;\n    fetch(url, {\n      method: \"DELETE\",\n    });\n    this.state.checklist.forEach((obj, index, arr) => {\n      let c;\n      if (obj.checklistid === checklistid) {\n        c = obj.checkitems;\n        c.filter((data) => data.id === checkitemid);\n        // c.map((data)=>{if (obj.checklistid === checklistid) {\n        //   data.name = input;\n        // }})\n        console.log(c);\n        let newchecklist = this.state.checklist;\n        newchecklist[index] = {\n          checkitems: c,\n        };\n        console.log(newchecklist);\n        this.setState({\n          checklist: newchecklist,\n        });\n      }\n    });\n  };\n\n  handleChange = (e) => {\n    this.setState({ input: e.target.value });\n  };\n\n  deleteChecklist = async (e, checklistid) => {\n    e.preventDefault();\n    let url = `https://api.trello.com/1/checklists/${checklistid}?key=${key}&token=${token}`;\n    await fetch(url, {\n      method: \"DELETE\",\n    });\n    this.setState({\n      checklist: this.state.checklist.filter(\n        (obj) => obj.checklistid !== checklistid\n      ),\n    });\n  };\n\n  async componentDidMount() {\n    let url = `https://api.trello.com/1/cards/${this.props.modal.id}/checklists?key=${key}&token=${token}`;\n    let data = await fetch(url, {\n      method: \"GET\",\n    });\n    data = await data.json();\n    console.log(data);\n    data.map((obj) =>\n      this.setState({\n        checklist: [\n          ...this.state.checklist,\n          {\n            name: obj.name,\n            checklistid: obj.id,\n            checkitems: obj.checkItems,\n            key: obj.id,\n          },\n        ],\n      })\n    );\n  }\n\n  render() {\n    const { addCheckitem, addChecklist, updateCheckItem } = this.state;\n    return (\n      <Modal show={this.props.show} onHide={this.props.removeModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modal.name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {addChecklist ? (\n            <Addchecklist\n              onAdd={this.handleAddChecklist}\n              onDelete={this.showAddChecklist}\n            />\n          ) : (\n            <div className=\"add-checklist\" onClick={this.showAddChecklist}>\n              <button className=\"btn btn-light\">Add checklist</button>\n            </div>\n          )}\n          <div className=\"checklist mt-2\">\n            {this.state.checklist.map((obj) => {\n              return (\n                <div className=\"form\" key={obj.checklistid}>\n                  <label className=\"label\">{obj.name}</label>\n                  <button\n                    onClick={(e) => this.deleteChecklist(e, obj.checklistid)}\n                    className=\"btn btn-light float-right\"\n                  >\n                    Remove\n                  </button>\n                </div>\n              );\n            })}\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.removeModal}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\nexport default ChecklistModal;\n"]},"metadata":{},"sourceType":"module"}